using System;
using System.Runtime.CompilerServices;

namespace Ionic.Zlib
{
	// Token: 0x02000092 RID: 146
	internal class WorkItem
	{
		// Token: 0x060005A7 RID: 1447 RVA: 0x00025788 File Offset: 0x00023988
		[MethodImpl(MethodImplOptions.NoInlining)]
		public WorkItem(int size, CompressionLevel compressLevel, CompressionStrategy strategy)
		{
			this.buffer = new byte[size];
			int num = size + (size / 32768 + 1) * 5 * 2;
			this.compressed = new byte[num];
			this.status = 0;
			this.compressor = new ZlibCodec();
			this.compressor.InitializeDeflate(compressLevel, false);
			this.compressor.OutputBuffer = this.compressed;
			this.compressor.InputBuffer = this.buffer;
		}

		// Token: 0x060005A8 RID: 1448 RVA: 0x00025808 File Offset: 0x00023A08
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static WorkItem()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x04000246 RID: 582
		public byte[] buffer;

		// Token: 0x04000247 RID: 583
		public byte[] compressed;

		// Token: 0x04000248 RID: 584
		public int status;

		// Token: 0x04000249 RID: 585
		public int crc;

		// Token: 0x0400024A RID: 586
		public int index;

		// Token: 0x0400024B RID: 587
		public int inputBytesAvailable;

		// Token: 0x0400024C RID: 588
		public int compressedBytesAvailable;

		// Token: 0x0400024D RID: 589
		public ZlibCodec compressor;

		// Token: 0x02000093 RID: 147
		internal enum Status
		{
			// Token: 0x0400024F RID: 591
			None,
			// Token: 0x04000250 RID: 592
			Filling,
			// Token: 0x04000251 RID: 593
			Filled,
			// Token: 0x04000252 RID: 594
			Compressing,
			// Token: 0x04000253 RID: 595
			Compressed,
			// Token: 0x04000254 RID: 596
			Writing,
			// Token: 0x04000255 RID: 597
			Done
		}
	}
}
