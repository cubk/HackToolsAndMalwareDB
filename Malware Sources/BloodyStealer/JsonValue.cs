using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Text;

namespace Application.Grabber.Browsers
{
	// Token: 0x02000030 RID: 48
	public abstract class JsonValue : IEnumerable
	{
		// Token: 0x17000041 RID: 65
		// (get) Token: 0x0600017F RID: 383 RVA: 0x00009EC8 File Offset: 0x000080C8
		public virtual int Count
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				throw new InvalidOperationException();
			}
		}

		// Token: 0x17000042 RID: 66
		// (get) Token: 0x06000180 RID: 384
		public abstract JsonType JsonType { [MethodImpl(MethodImplOptions.NoInlining)] get; }

		// Token: 0x17000043 RID: 67
		public virtual JsonValue this[int index]
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				throw new InvalidOperationException();
			}
			[MethodImpl(MethodImplOptions.NoInlining)]
			set
			{
				throw new InvalidOperationException();
			}
		}

		// Token: 0x17000044 RID: 68
		public virtual JsonValue this[string key]
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				throw new InvalidOperationException();
			}
			[MethodImpl(MethodImplOptions.NoInlining)]
			set
			{
				throw new InvalidOperationException();
			}
		}

		// Token: 0x06000185 RID: 389 RVA: 0x00009F2C File Offset: 0x0000812C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static JsonValue Load(Stream stream)
		{
			if (stream == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("âu?\u0001Ç\u0004"));
			}
			return JsonValue.Load(new StreamReader(stream, true));
		}

		// Token: 0x06000186 RID: 390 RVA: 0x00009F58 File Offset: 0x00008158
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static JsonValue Load(TextReader textReader)
		{
			if (textReader == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("åd5\u0010ô\fRSÉ\0"));
			}
			return JsonValue.ToJsonValue<object>(new JavaScriptReader(textReader).Read());
		}

		// Token: 0x06000187 RID: 391 RVA: 0x00009F88 File Offset: 0x00008188
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static IEnumerable<KeyValuePair<string, JsonValue>> ToJsonPairEnumerable(IEnumerable<KeyValuePair<string, object>> kvpc)
		{
			foreach (KeyValuePair<string, object> keyValuePair in kvpc)
			{
				yield return new KeyValuePair<string, JsonValue>(keyValuePair.Key, JsonValue.ToJsonValue<object>(keyValuePair.Value));
			}
			IEnumerator<KeyValuePair<string, object>> enumerator = null;
			yield break;
			yield break;
		}

		// Token: 0x06000188 RID: 392 RVA: 0x00009FA4 File Offset: 0x000081A4
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static IEnumerable<JsonValue> ToJsonValueEnumerable(IEnumerable arr)
		{
			foreach (object ret in arr)
			{
				yield return JsonValue.ToJsonValue<object>(ret);
			}
			IEnumerator enumerator = null;
			yield break;
			yield break;
		}

		// Token: 0x06000189 RID: 393 RVA: 0x00009FC0 File Offset: 0x000081C0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static JsonValue ToJsonValue<T>(T ret)
		{
			T t;
			Uri value;
			IEnumerable<KeyValuePair<string, object>> enumerable;
			string value2;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						goto IL_202;
					case 1:
						goto IL_2ED;
					case 2:
						goto IL_5B;
					case 3:
						if (ret == null)
						{
							goto Block_8;
						}
						if ((t = ret) is bool)
						{
							goto Block_9;
						}
						if ((t = ret) is byte)
						{
							goto Block_10;
						}
						if ((t = ret) is char)
						{
							goto Block_11;
						}
						if ((t = ret) is decimal)
						{
							goto Block_12;
						}
						if ((t = ret) is double)
						{
							goto Block_13;
						}
						if ((t = ret) is float)
						{
							goto Block_14;
						}
						goto IL_202;
					}
					break;
					IL_5B:
					if ((t = ret) is ushort)
					{
						goto Block_2;
					}
					if ((t = ret) is DateTime)
					{
						goto Block_3;
					}
					if ((t = ret) is DateTimeOffset)
					{
						goto Block_4;
					}
					if ((t = ret) is Guid)
					{
						goto Block_5;
					}
					if ((t = ret) is TimeSpan)
					{
						goto Block_6;
					}
					if ((value = (ret as Uri)) != null)
					{
						goto Block_7;
					}
					enumerable = (ret as IEnumerable<KeyValuePair<string, object>>);
					if (enumerable != null)
					{
						num = delegate0da.f0000d7(-1);
						continue;
					}
					goto IL_2F9;
					IL_202:
					if ((t = ret) is int)
					{
						goto Block_15;
					}
					if ((t = ret) is long)
					{
						goto Block_16;
					}
					if ((t = ret) is sbyte)
					{
						goto Block_17;
					}
					if ((t = ret) is short)
					{
						goto Block_18;
					}
					if ((value2 = (ret as string)) != null)
					{
						goto Block_19;
					}
					if ((t = ret) is uint)
					{
						goto Block_20;
					}
					if ((t = ret) is ulong)
					{
						goto Block_21;
					}
					goto IL_5B;
				}
			}
			Block_2:
			return new JsonPrimitive((ushort)((object)t));
			Block_3:
			return new JsonPrimitive((DateTime)((object)t));
			Block_4:
			return new JsonPrimitive((DateTimeOffset)((object)t));
			Block_5:
			return new JsonPrimitive((Guid)((object)t));
			Block_6:
			return new JsonPrimitive((TimeSpan)((object)t));
			Block_7:
			return new JsonPrimitive(value);
			Block_8:
			return null;
			Block_9:
			return new JsonPrimitive((bool)((object)t));
			Block_10:
			return new JsonPrimitive((byte)((object)t));
			Block_11:
			return new JsonPrimitive((char)((object)t));
			Block_12:
			return new JsonPrimitive((decimal)((object)t));
			Block_13:
			return new JsonPrimitive((double)((object)t));
			Block_14:
			return new JsonPrimitive((float)((object)t));
			Block_15:
			return new JsonPrimitive((int)((object)t));
			Block_16:
			return new JsonPrimitive((long)((object)t));
			Block_17:
			return new JsonPrimitive((sbyte)((object)t));
			Block_18:
			return new JsonPrimitive((short)((object)t));
			Block_19:
			return new JsonPrimitive(value2);
			Block_20:
			return new JsonPrimitive((uint)((object)t));
			Block_21:
			return new JsonPrimitive((ulong)((object)t));
			IL_2ED:
			return new JsonObject(JsonValue.ToJsonPairEnumerable(enumerable));
			IL_2F9:
			IEnumerable enumerable2 = ret as IEnumerable;
			if (enumerable2 != null)
			{
				return new JsonArray(JsonValue.ToJsonValueEnumerable(enumerable2));
			}
			if (!(ret is IEnumerable))
			{
				PropertyInfo[] properties = ret.GetType().GetProperties();
				Dictionary<string, object> dictionary = new Dictionary<string, object>();
				foreach (PropertyInfo p in properties)
				{
					dictionary.Add(delegate0cd.f0000a8(p), delegate0cd.f0000a6(delegate010b.f000135(p, ret, null)));
				}
				if (dictionary.Count > 0)
				{
					return new JsonObject(JsonValue.ToJsonPairEnumerable(dictionary));
				}
			}
			throw new NotSupportedException(string.Format(c0000c0.m00000f("Äo(\u001cÖ\fPCÉ\u0016n\\iå>\u0002ä¢\u001c\u0003Y±hÃsÊ\u000e®r\u0082ÃÍ-J"), ret.GetType()));
		}

		// Token: 0x0600018A RID: 394 RVA: 0x0000A3A0 File Offset: 0x000085A0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static JsonValue Parse(string jsonString)
		{
			if (jsonString == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ûr\"\nõ\u001dA^Â\u0015"));
			}
			return JsonValue.Load(new StringReader(jsonString));
		}

		// Token: 0x0600018B RID: 395 RVA: 0x0000A3CC File Offset: 0x000085CC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public virtual bool ContainsKey(string key)
		{
			throw new InvalidOperationException();
		}

		// Token: 0x0600018C RID: 396 RVA: 0x0000A3E0 File Offset: 0x000085E0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public virtual void Save(Stream stream, bool parsing)
		{
			if (stream == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("âu?\u0001Ç\u0004"));
			}
			this.Save(new StreamWriter(stream), parsing);
		}

		// Token: 0x0600018D RID: 397 RVA: 0x0000A410 File Offset: 0x00008610
		[MethodImpl(MethodImplOptions.NoInlining)]
		public virtual void Save(TextWriter textWriter, bool parsing)
		{
			if (textWriter == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("åd5\u0010ñ\u001bZCÉ\0"));
			}
			this.Savepublic(textWriter, parsing);
		}

		// Token: 0x0600018E RID: 398 RVA: 0x0000A438 File Offset: 0x00008638
		[MethodImpl(MethodImplOptions.NoInlining)]
		private void Savepublic(TextWriter p0, bool saving)
		{
			switch (this.JsonType)
			{
			case JsonType.f000029:
				if (saving)
				{
					delegate010d.f00013b(p0, '"');
				}
				p0.Write(this.EscapeString(((JsonPrimitive)this).GetFormattedString()));
				if (saving)
				{
					delegate010d.f00013b(p0, '"');
					return;
				}
				return;
			case JsonType.f00002a:
			{
				p0.Write('{');
				bool flag = false;
				foreach (KeyValuePair<string, JsonValue> keyValuePair in ((JsonObject)this))
				{
					if (flag)
					{
						delegate010c.f000137(p0, c0000c0.m00000f("½!"));
					}
					p0.Write('"');
					delegate010c.f000137(p0, this.EscapeString(keyValuePair.Key));
					delegate010c.f000137(p0, c0000c0.m00000f("³;m"));
					if (keyValuePair.Value == null)
					{
						delegate010c.f000137(p0, c0000c0.m00000f("ÿt!\b"));
					}
					else
					{
						keyValuePair.Value.Savepublic(p0, saving);
					}
					flag = true;
				}
				p0.Write('}');
				return;
			}
			case JsonType.Array:
			{
				p0.Write('[');
				bool flag2 = false;
				foreach (JsonValue jsonValue in ((IEnumerable<JsonValue>)((JsonArray)this)))
				{
					if (flag2)
					{
						delegate010c.f000137(p0, c0000c0.m00000f("½!"));
					}
					if (jsonValue != null)
					{
						jsonValue.Savepublic(p0, saving);
					}
					else
					{
						p0.Write(c0000c0.m00000f("ÿt!\b"));
					}
					flag2 = true;
				}
				p0.Write(']');
				return;
			}
			case JsonType.Boolean:
				p0.Write(this ? c0000c0.m00000f("ås8\u0001") : c0000c0.m00000f("÷`!\u0017Ã"));
				return;
			}
			p0.Write(((JsonPrimitive)this).GetFormattedString());
		}

		// Token: 0x0600018F RID: 399 RVA: 0x0000A600 File Offset: 0x00008800
		[MethodImpl(MethodImplOptions.NoInlining)]
		public string ToString(bool saving = true)
		{
			StringWriter stringWriter = new StringWriter();
			this.Save(stringWriter, saving);
			return delegate0cd.f0000a6(stringWriter);
		}

		// Token: 0x06000190 RID: 400 RVA: 0x0000A628 File Offset: 0x00008828
		[MethodImpl(MethodImplOptions.NoInlining)]
		IEnumerator IEnumerable.GetEnumerator()
		{
			throw new InvalidOperationException();
		}

		// Token: 0x06000191 RID: 401 RVA: 0x0000A63C File Offset: 0x0000883C
		[MethodImpl(MethodImplOptions.NoInlining)]
		private bool NeedEscape(string src, int p1)
		{
			char c;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						if (c > '\udbff' || (p1 != src.Length - 1 && src[p1 + 1] >= '\udc00' && src[p1 + 1] <= '\udfff'))
						{
							goto IL_12A;
						}
						return true;
					case 1:
						goto IL_14F;
					case 2:
						if (c > '\udfff' || (p1 != 0 && src[p1 - 1] >= '\ud800' && src[p1 - 1] <= '\udbff'))
						{
							goto IL_73;
						}
						return true;
					case 3:
						c = src[p1];
						if (c < ' ' || c == '"' || c == '\\')
						{
							return true;
						}
						if (c >= '\ud800')
						{
							num = delegate0da.f0000d7(0);
							continue;
						}
						goto IL_12A;
					}
					break;
					IL_73:
					if (c != '\u2028')
					{
						num = delegate0da.f0000d7(-1);
						continue;
					}
					return true;
					IL_12A:
					if (c < '\udc00')
					{
						goto IL_73;
					}
					num = delegate0da.f0000d7(-2);
				}
			}
			IL_14F:
			if (c != '\u2029')
			{
				return c == '/' && p1 > 0 && src[p1 - 1] == '<';
			}
			return true;
		}

		// Token: 0x06000192 RID: 402 RVA: 0x0000A7C8 File Offset: 0x000089C8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public string EscapeString(string src)
		{
			int num2;
			StringBuilder p;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						goto IL_AC;
					case 1:
						IL_A8:
						num2++;
						goto IL_AC;
					case 2:
						goto IL_36;
					case 3:
						if (src == null)
						{
							goto Block_2;
						}
						num2 = 0;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_AC:
					if (num2 >= src.Length)
					{
						return src;
					}
					if (!this.NeedEscape(src, num2))
					{
						goto IL_A8;
					}
					p = new StringBuilder();
					num = delegate0da.f0000d7(-2);
				}
			}
			IL_36:
			if (num2 > 0)
			{
				delegate010e.f00013c(p, src, 0, num2);
			}
			return this.DoEscapeString(p, src, num2);
			Block_2:
			return null;
		}

		// Token: 0x06000193 RID: 403 RVA: 0x0000A890 File Offset: 0x00008A90
		[MethodImpl(MethodImplOptions.NoInlining)]
		private string DoEscapeString(StringBuilder p0, string src, int cur)
		{
			int num2;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num3;
					switch (num)
					{
					case 0:
						goto IL_1A6;
					case 1:
						IL_13B:
						p0.Append(c0000c0.m00000f("Í."));
						goto IL_1DC;
					case 2:
						goto IL_1DC;
					case 3:
						num2 = cur;
						num3 = cur;
						goto IL_1E4;
					}
					break;
					IL_1E4:
					if (num3 >= src.Length)
					{
						goto Block_7;
					}
					if (this.NeedEscape(src, num3))
					{
						delegate010e.f00013c(p0, src, num2, num3 - num2);
						char c = src[num3];
						if (c <= '"')
						{
							switch (c)
							{
							case '\b':
								p0.Append(c0000c0.m00000f("Íc"));
								goto IL_1DC;
							case '\t':
								delegate0f7.f00010f(p0, c0000c0.m00000f("Íu"));
								goto IL_1DC;
							case '\n':
								p0.Append(c0000c0.m00000f("Ío"));
								num = delegate0da.f0000d7(-2);
								continue;
							case '\v':
								goto IL_1A6;
							case '\f':
								p0.Append(c0000c0.m00000f("Íg"));
								goto IL_1DC;
							case '\r':
								p0.Append(c0000c0.m00000f("Ís"));
								goto IL_1DC;
							default:
								if (c != '"')
								{
									num = delegate0da.f0000d7(0);
									continue;
								}
								delegate0f7.f00010f(p0, c0000c0.m00000f("Í#"));
								goto IL_1DC;
							}
						}
						else
						{
							if (c == '/')
							{
								goto IL_13B;
							}
							if (c != '\\')
							{
								goto IL_1A6;
							}
							delegate0f7.f00010f(p0, c0000c0.m00000f("Í]"));
							goto IL_1DC;
						}
					}
					IL_1E0:
					num3++;
					goto IL_1E4;
					IL_1DC:
					num2 = num3 + 1;
					goto IL_1E0;
					IL_1A6:
					p0.Append(c0000c0.m00000f("Ít"));
					delegate0f7.f00010f(p0, ((int)src[num3]).ToString(c0000c0.m00000f("é1y")));
					goto IL_1DC;
				}
			}
			Block_7:
			delegate010e.f00013c(p0, src, num2, src.Length - num2);
			return delegate0cd.f0000a6(p0);
		}

		// Token: 0x06000194 RID: 404 RVA: 0x0000AAB0 File Offset: 0x00008CB0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(bool value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x06000195 RID: 405 RVA: 0x0000AAC4 File Offset: 0x00008CC4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(byte value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x06000196 RID: 406 RVA: 0x0000AAD8 File Offset: 0x00008CD8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(char value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x06000197 RID: 407 RVA: 0x0000AAEC File Offset: 0x00008CEC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(decimal value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x06000198 RID: 408 RVA: 0x0000AB00 File Offset: 0x00008D00
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(double value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x06000199 RID: 409 RVA: 0x0000AB14 File Offset: 0x00008D14
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(float value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x0600019A RID: 410 RVA: 0x0000AB28 File Offset: 0x00008D28
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(int value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x0600019B RID: 411 RVA: 0x0000AB3C File Offset: 0x00008D3C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(long value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x0600019C RID: 412 RVA: 0x0000AB50 File Offset: 0x00008D50
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(sbyte value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x0600019D RID: 413 RVA: 0x0000AB64 File Offset: 0x00008D64
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(short value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x0600019E RID: 414 RVA: 0x0000AB78 File Offset: 0x00008D78
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(string value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x0600019F RID: 415 RVA: 0x0000AB8C File Offset: 0x00008D8C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(uint value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A0 RID: 416 RVA: 0x0000ABA0 File Offset: 0x00008DA0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(ulong value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A1 RID: 417 RVA: 0x0000ABB4 File Offset: 0x00008DB4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(ushort value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A2 RID: 418 RVA: 0x0000ABC8 File Offset: 0x00008DC8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(DateTime value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A3 RID: 419 RVA: 0x0000ABDC File Offset: 0x00008DDC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(DateTimeOffset value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A4 RID: 420 RVA: 0x0000ABF0 File Offset: 0x00008DF0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(Guid value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A5 RID: 421 RVA: 0x0000AC04 File Offset: 0x00008E04
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(TimeSpan value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A6 RID: 422 RVA: 0x0000AC18 File Offset: 0x00008E18
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator JsonValue(Uri value)
		{
			return new JsonPrimitive(value);
		}

		// Token: 0x060001A7 RID: 423 RVA: 0x0000AC2C File Offset: 0x00008E2C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator bool(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToBoolean(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001A8 RID: 424 RVA: 0x0000AC68 File Offset: 0x00008E68
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator byte(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToByte(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001A9 RID: 425 RVA: 0x0000ACA4 File Offset: 0x00008EA4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator char(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToChar(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001AA RID: 426 RVA: 0x0000ACE0 File Offset: 0x00008EE0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator decimal(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToDecimal(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001AB RID: 427 RVA: 0x0000AD1C File Offset: 0x00008F1C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator double(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToDouble(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001AC RID: 428 RVA: 0x0000AD58 File Offset: 0x00008F58
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator float(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToSingle(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001AD RID: 429 RVA: 0x0000AD94 File Offset: 0x00008F94
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator int(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToInt32(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001AE RID: 430 RVA: 0x0000ADD0 File Offset: 0x00008FD0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator long(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToInt64(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001AF RID: 431 RVA: 0x0000AE0C File Offset: 0x0000900C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator sbyte(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToSByte(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001B0 RID: 432 RVA: 0x0000AE48 File Offset: 0x00009048
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator short(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToInt16(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001B1 RID: 433 RVA: 0x0000AE84 File Offset: 0x00009084
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator string(JsonValue value)
		{
			if (value == null)
			{
				return null;
			}
			return value.ToString(true);
		}

		// Token: 0x060001B2 RID: 434 RVA: 0x0000AEA0 File Offset: 0x000090A0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator uint(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToUInt32(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001B3 RID: 435 RVA: 0x0000AEDC File Offset: 0x000090DC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator ulong(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToUInt64(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001B4 RID: 436 RVA: 0x0000AF18 File Offset: 0x00009118
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator ushort(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return Convert.ToUInt16(((JsonPrimitive)value).Value, delegate010a.f000134());
		}

		// Token: 0x060001B5 RID: 437 RVA: 0x0000AF54 File Offset: 0x00009154
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator DateTime(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return (DateTime)((JsonPrimitive)value).Value;
		}

		// Token: 0x060001B6 RID: 438 RVA: 0x0000AF84 File Offset: 0x00009184
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator DateTimeOffset(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return (DateTimeOffset)((JsonPrimitive)value).Value;
		}

		// Token: 0x060001B7 RID: 439 RVA: 0x0000AFB4 File Offset: 0x000091B4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator TimeSpan(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return (TimeSpan)((JsonPrimitive)value).Value;
		}

		// Token: 0x060001B8 RID: 440 RVA: 0x0000AFE4 File Offset: 0x000091E4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator Guid(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return (Guid)((JsonPrimitive)value).Value;
		}

		// Token: 0x060001B9 RID: 441 RVA: 0x0000B014 File Offset: 0x00009214
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static implicit operator Uri(JsonValue value)
		{
			if (value == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("ç`!\u0011Ã"));
			}
			return (Uri)((JsonPrimitive)value).Value;
		}

		// Token: 0x060001BA RID: 442 RVA: 0x0000B044 File Offset: 0x00009244
		[MethodImpl(MethodImplOptions.NoInlining)]
		protected JsonValue()
		{
		}

		// Token: 0x060001BB RID: 443 RVA: 0x0000B04C File Offset: 0x0000924C
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static JsonValue()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}
	}
}
