using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Management;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Application.Anti.Reverse.Methods
{
	// Token: 0x02000048 RID: 72
	internal class NotRealPc
	{
		// Token: 0x06000228 RID: 552 RVA: 0x0000E244 File Offset: 0x0000C444
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static bool CheckWMI()
		{
			foreach (string value in NotRealPc.GetModelsAndManufactures())
			{
				if (Settings.VmNames.Contains(value))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06000229 RID: 553 RVA: 0x0000E290 File Offset: 0x0000C490
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static List<string> GetModelsAndManufactures()
		{
			List<string> list = new List<string>();
			ManagementObject p = new ManagementObjectSearcher(c0000c0.m00000f("ãn\"\u0010ú*zzú@"), c0000c0.m00000f("ÂD\u0001!å=\u0013\u001d\u008c4\u001ccE·\u001a\u000eø±\\9n«wÝ&Ê\u0012¬DÁ\u0090ÂxZ")).Get().OfType<ManagementObject>().Where(new Func<ManagementObject, bool>(NotRealPc.c000049.f000018.m00000c)).FirstOrDefault<ManagementObject>();
			list.Add(delegate0cd.f0000a6(delegate0130.f00016a(p, c0000c0.m00000f("Ü`#\u0011À\bPCÙ\0+^"))).ToLower());
			list.Add(delegate0cd.f0000a6(delegate0130.f00016a(p, c0000c0.m00000f("Ün)\u0001Ê"))).ToLower());
			return list;
		}

		// Token: 0x0600022A RID: 554 RVA: 0x0000E348 File Offset: 0x0000C548
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static bool Check()
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						if (Process.GetProcessesByName(c0000c0.m00000f("Âc$\u0001å\u001dA[")).Length != 0)
						{
							num = delegate0da.f0000d7(-2);
							continue;
						}
						goto IL_BB;
					case 1:
						goto IL_BB;
					case 2:
						if (!(NativeMethods.GetModuleHandle(c0000c0.m00000f("Âc$\u0001â\u0005_\u0019È\u001e\"")) != IntPtr.Zero))
						{
							num = delegate0da.f0000d7(-1);
							continue;
						}
						return true;
					case 3:
						if (!SystemInformation.TerminalServerSession)
						{
							num = delegate0da.f0000d7(0);
							continue;
						}
						return true;
					}
					break;
				}
			}
			IL_BB:
			return NotRealPc.CheckWMI();
		}

		// Token: 0x0600022B RID: 555 RVA: 0x0000E418 File Offset: 0x0000C618
		[MethodImpl(MethodImplOptions.NoInlining)]
		public NotRealPc()
		{
		}

		// Token: 0x0600022C RID: 556 RVA: 0x0000E420 File Offset: 0x0000C620
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static NotRealPc()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x02000049 RID: 73
		[CompilerGenerated]
		[Serializable]
		private sealed class c000049
		{
			// Token: 0x0600022D RID: 557 RVA: 0x0000E42C File Offset: 0x0000C62C
			// Note: this type is marked as 'beforefieldinit'.
			static c000049()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
				NotRealPc.c000049.f000018 = new NotRealPc.c000049();
			}

			// Token: 0x0600022E RID: 558 RVA: 0x0000E444 File Offset: 0x0000C644
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c000049()
			{
			}

			// Token: 0x0600022F RID: 559 RVA: 0x0000E44C File Offset: 0x0000C64C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m00000c(ManagementObject item)
			{
				return item != null;
			}

			// Token: 0x040000A3 RID: 163
			public static readonly NotRealPc.c000049 f000018;

			// Token: 0x040000A4 RID: 164
			public static Func<ManagementObject, bool> f000034;
		}
	}
}
