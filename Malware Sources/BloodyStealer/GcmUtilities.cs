using System;
using System.Runtime.CompilerServices;

namespace Application.Grabber.Browsers
{
	// Token: 0x0200001B RID: 27
	internal abstract class GcmUtilities
	{
		// Token: 0x060000BC RID: 188 RVA: 0x0000616C File Offset: 0x0000436C
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static byte[] OneAsBytes()
		{
			byte[] array = new byte[16];
			array[0] = 128;
			return array;
		}

		// Token: 0x060000BD RID: 189 RVA: 0x00006188 File Offset: 0x00004388
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static uint[] OneAsUints()
		{
			uint[] array = new uint[4];
			array[0] = 2147483648U;
			return array;
		}

		// Token: 0x060000BE RID: 190 RVA: 0x000061A4 File Offset: 0x000043A4
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static uint[] AsUints(byte[] p0)
		{
			return new uint[]
			{
				Pack.BE_To_UInt32(p0, 0),
				Pack.BE_To_UInt32(p0, 4),
				Pack.BE_To_UInt32(p0, 8),
				Pack.BE_To_UInt32(p0, 12)
			};
		}

		// Token: 0x060000BF RID: 191 RVA: 0x000061E0 File Offset: 0x000043E0
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void Multiply(byte[] block, byte[] val)
		{
			byte[] array;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					int num3;
					byte[] array2;
					switch (num)
					{
					case 0:
					{
						IL_96:
						byte b = val[num2];
						num3 = 7;
						goto IL_9D;
					}
					case 1:
						goto IL_9D;
					case 2:
						GcmUtilities.Xor(array, array2);
						goto IL_3D;
					case 3:
						array2 = Arrays.Clone(block);
						array = new byte[16];
						num2 = 0;
						goto IL_A9;
					}
					break;
					IL_3D:
					bool flag = (array2[15] & 1) > 0;
					GcmUtilities.ShiftRight(array2);
					if (flag)
					{
						byte[] array3 = array2;
						int num4 = 0;
						array3[num4] ^= 225;
					}
					num3--;
					num = delegate0da.f0000d7(-1);
					continue;
					IL_9D:
					if (num3 < 0)
					{
						num2++;
					}
					else
					{
						byte b;
						if (((int)b & 1 << num3) != 0)
						{
							num = delegate0da.f0000d7(-2);
							continue;
						}
						goto IL_3D;
					}
					IL_A9:
					if (num2 >= 16)
					{
						goto Block_3;
					}
					goto IL_96;
				}
			}
			Block_3:
			delegate0fe.f000120(array, 0, block, 0, 16);
		}

		// Token: 0x060000C0 RID: 192 RVA: 0x000062D8 File Offset: 0x000044D8
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void MultiplyP(uint[] p0)
		{
			bool flag = (p0[3] & 1U) > 0U;
			GcmUtilities.ShiftRight(p0);
			if (flag)
			{
				p0[0] ^= 3774873600U;
			}
		}

		// Token: 0x060000C1 RID: 193 RVA: 0x00006308 File Offset: 0x00004508
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void MultiplyP8(uint[] p0)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					switch (num)
					{
					case 0:
						num2 = 7;
						goto IL_A2;
					case 1:
						goto IL_9E;
					case 2:
					{
						IL_36:
						uint num3;
						if (((ulong)num3 & (ulong)(1L << (num2 & 31))) != 0UL)
						{
							p0[0] ^= 3774873600U >> 7 - num2;
							num = delegate0da.f0000d7(-1);
							continue;
						}
						goto IL_9E;
					}
					case 3:
					{
						uint num3 = p0[3];
						GcmUtilities.ShiftRightN(p0, 8);
						num = delegate0da.f0000d7(0);
						continue;
					}
					}
					break;
					IL_A2:
					if (num2 < 0)
					{
						return;
					}
					goto IL_36;
					IL_9E:
					num2--;
					goto IL_A2;
				}
			}
		}

		// Token: 0x060000C2 RID: 194 RVA: 0x000063C0 File Offset: 0x000045C0
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void ShiftRight(byte[] block)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					byte b2;
					byte b;
					switch (num)
					{
					case 0:
						goto IL_7D;
					case 1:
						goto IL_7D;
					case 2:
						if (++num2 != 16)
						{
							b = (byte)(b2 << 7);
							num = delegate0da.f0000d7(-1);
							continue;
						}
						return;
					case 3:
						num2 = 0;
						b = 0;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_7D:
					b2 = block[num2];
					block[num2] = (byte)(b2 >> 1 | (int)b);
					num = delegate0da.f0000d7(-2);
				}
			}
		}

		// Token: 0x060000C3 RID: 195 RVA: 0x00006474 File Offset: 0x00004674
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void ShiftRight(uint[] block)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					uint num4;
					uint num3;
					switch (num)
					{
					case 0:
						goto IL_7C;
					case 1:
						goto IL_7C;
					case 2:
						if (++num2 != 4)
						{
							num3 = num4 << 31;
							num = delegate0da.f0000d7(-1);
							continue;
						}
						return;
					case 3:
						num2 = 0;
						num3 = 0U;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_7C:
					num4 = block[num2];
					block[num2] = (num4 >> 1 | num3);
					num = delegate0da.f0000d7(-2);
				}
			}
		}

		// Token: 0x060000C4 RID: 196 RVA: 0x00006528 File Offset: 0x00004728
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void ShiftRightN(uint[] block, int p1)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					uint num4;
					uint num3;
					switch (num)
					{
					case 0:
						goto IL_81;
					case 1:
						goto IL_81;
					case 2:
						if (++num2 != 4)
						{
							num3 = num4 << 32 - p1;
							num = delegate0da.f0000d7(-1);
							continue;
						}
						return;
					case 3:
						num2 = 0;
						num3 = 0U;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_81:
					num4 = block[num2];
					block[num2] = (num4 >> p1 | num3);
					num = delegate0da.f0000d7(-2);
				}
			}
		}

		// Token: 0x060000C5 RID: 197 RVA: 0x000065E4 File Offset: 0x000047E4
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void Xor(byte[] block, byte[] val)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					switch (num)
					{
					case 0:
						goto IL_81;
					case 1:
						num2--;
						goto IL_81;
					case 2:
					{
						IL_36:
						int num3 = num2;
						block[num3] ^= val[num2];
						num = delegate0da.f0000d7(-1);
						continue;
					}
					case 3:
						num2 = 15;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_81:
					if (num2 < 0)
					{
						return;
					}
					goto IL_36;
				}
			}
		}

		// Token: 0x060000C6 RID: 198 RVA: 0x0000667C File Offset: 0x0000487C
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static void Xor(uint[] block, uint[] val)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					int num2;
					switch (num)
					{
					case 0:
						goto IL_7F;
					case 1:
						num2--;
						goto IL_7F;
					case 2:
						IL_36:
						block[num2] ^= val[num2];
						num = delegate0da.f0000d7(-1);
						continue;
					case 3:
						num2 = 3;
						num = delegate0da.f0000d7(0);
						continue;
					}
					break;
					IL_7F:
					if (num2 < 0)
					{
						return;
					}
					goto IL_36;
				}
			}
		}

		// Token: 0x060000C7 RID: 199 RVA: 0x00006710 File Offset: 0x00004910
		[MethodImpl(MethodImplOptions.NoInlining)]
		protected GcmUtilities()
		{
		}

		// Token: 0x060000C8 RID: 200 RVA: 0x00006718 File Offset: 0x00004918
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static GcmUtilities()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}
	}
}
