using System;
using System.Runtime.CompilerServices;

namespace Ionic.Zip
{
	// Token: 0x0200007E RID: 126
	public class AddProgressEventArgs : ZipProgressEventArgs
	{
		// Token: 0x060003BF RID: 959 RVA: 0x00015FA8 File Offset: 0x000141A8
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal AddProgressEventArgs()
		{
		}

		// Token: 0x060003C0 RID: 960 RVA: 0x00015FB0 File Offset: 0x000141B0
		[MethodImpl(MethodImplOptions.NoInlining)]
		private AddProgressEventArgs(string archiveName, ZipProgressEventType flavor) : base(archiveName, flavor)
		{
		}

		// Token: 0x060003C1 RID: 961 RVA: 0x00015FBC File Offset: 0x000141BC
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static AddProgressEventArgs AfterEntry(string archiveName, ZipEntry entry, int entriesTotal)
		{
			return new AddProgressEventArgs(archiveName, ZipProgressEventType.Adding_AfterAddEntry)
			{
				EntriesTotal = entriesTotal,
				CurrentEntry = entry
			};
		}

		// Token: 0x060003C2 RID: 962 RVA: 0x00015FE0 File Offset: 0x000141E0
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static AddProgressEventArgs Started(string archiveName)
		{
			return new AddProgressEventArgs(archiveName, ZipProgressEventType.Adding_Started);
		}

		// Token: 0x060003C3 RID: 963 RVA: 0x00015FF8 File Offset: 0x000141F8
		[MethodImpl(MethodImplOptions.NoInlining)]
		internal static AddProgressEventArgs Completed(string archiveName)
		{
			return new AddProgressEventArgs(archiveName, ZipProgressEventType.Adding_Completed);
		}

		// Token: 0x060003C4 RID: 964 RVA: 0x00016010 File Offset: 0x00014210
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static AddProgressEventArgs()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}
	}
}
