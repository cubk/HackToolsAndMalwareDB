using System;
using System.Runtime.CompilerServices;

namespace Application
{
	// Token: 0x02000002 RID: 2
	internal class FileObject
	{
		// Token: 0x17000001 RID: 1
		// (get) Token: 0x06000002 RID: 2 RVA: 0x00002064 File Offset: 0x00000264
		// (set) Token: 0x06000003 RID: 3 RVA: 0x00002078 File Offset: 0x00000278
		public string Name { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] set; }

		// Token: 0x17000002 RID: 2
		// (get) Token: 0x06000004 RID: 4 RVA: 0x0000208C File Offset: 0x0000028C
		// (set) Token: 0x06000005 RID: 5 RVA: 0x000020A0 File Offset: 0x000002A0
		public byte[] Content { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] set; }

		// Token: 0x06000006 RID: 6 RVA: 0x000020B4 File Offset: 0x000002B4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public FileObject()
		{
		}

		// Token: 0x06000007 RID: 7 RVA: 0x000020BC File Offset: 0x000002BC
		[MethodImpl(MethodImplOptions.NoInlining)]
		public FileObject(string name, byte[] content)
		{
			this.Name = name;
			this.Content = content;
		}

		// Token: 0x06000008 RID: 8 RVA: 0x000020D4 File Offset: 0x000002D4
		[MethodImpl(MethodImplOptions.NoInlining)]
		public FileObject(string name, string content)
		{
			this.Name = name;
			this.Content = delegate0c7.f00008f(c0000c0.m00000f("Æh#\0É\u001e@\u001a\u009d@{\u001e")).GetBytes(content);
		}

		// Token: 0x17000003 RID: 3
		// (get) Token: 0x06000009 RID: 9 RVA: 0x00002104 File Offset: 0x00000304
		public string StringContent
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				return delegate0c7.f00008f(c0000c0.m00000f("Æh#\0É\u001e@\u001a\u009d@{\u001e")).GetString(this.Content);
			}
		}

		// Token: 0x17000004 RID: 4
		// (get) Token: 0x0600000A RID: 10 RVA: 0x00002130 File Offset: 0x00000330
		public int Length
		{
			[MethodImpl(MethodImplOptions.NoInlining)]
			get
			{
				return this.StringContent.Split(new char[]
				{
					'\n'
				}).Length;
			}
		}

		// Token: 0x0600000B RID: 11 RVA: 0x00002158 File Offset: 0x00000358
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static FileObject()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x04000001 RID: 1
		[CompilerGenerated]
		private string f000001;

		// Token: 0x04000002 RID: 2
		[CompilerGenerated]
		private byte[] f000002;
	}
}
